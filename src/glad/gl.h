/**
 * Loader generated by glad 2.0.4 on Fri Apr 21 17:52:11 2023
 *
 * SPDX-License-Identifier: (WTFPL OR CC0-1.0) AND Apache-2.0
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 1
 *
 * APIs:
 *  - gl:compatibility=4.3
 *
 * Options:
 *  - ALIAS = False
 *  - DEBUG = False
 *  - HEADER_ONLY = False
 *  - LOADER = True
 *  - MX = False
 *  - ON_DEMAND = False
 *
 * Commandline:
 *    --api='gl:compatibility=4.3' --extensions='GL_EXT_texture_filter_anisotropic' c --loader
 *
 * Online:
 *    http://glad.sh/#api=gl%3Acompatibility%3D4.3&extensions=GL_EXT_texture_filter_anisotropic&generator=c&options=LOADER
 *
 */

#ifndef GLAD_GL_H_
#define GLAD_GL_H_

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
  #error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
  #error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
  #error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
  #error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define GLAD_GL
#define GLAD_OPTION_GL_LOADER

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GLAD_PLATFORM_H_
#define GLAD_PLATFORM_H_

#ifndef GLAD_PLATFORM_WIN32
  #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
    #define GLAD_PLATFORM_WIN32 1
  #else
    #define GLAD_PLATFORM_WIN32 0
  #endif
#endif

#ifndef GLAD_PLATFORM_APPLE
  #ifdef __APPLE__
    #define GLAD_PLATFORM_APPLE 1
  #else
    #define GLAD_PLATFORM_APPLE 0
  #endif
#endif

#ifndef GLAD_PLATFORM_EMSCRIPTEN
  #ifdef __EMSCRIPTEN__
    #define GLAD_PLATFORM_EMSCRIPTEN 1
  #else
    #define GLAD_PLATFORM_EMSCRIPTEN 0
  #endif
#endif

#ifndef GLAD_PLATFORM_UWP
  #if defined(_MSC_VER) && !defined(GLAD_INTERNAL_HAVE_WINAPIFAMILY)
    #ifdef __has_include
      #if __has_include(<winapifamily.h>)
        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
      #endif
    #elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
      #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
    #endif
  #endif

  #ifdef GLAD_INTERNAL_HAVE_WINAPIFAMILY
    #include <winapifamily.h>
    #if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
      #define GLAD_PLATFORM_UWP 1
    #endif
  #endif

  #ifndef GLAD_PLATFORM_UWP
    #define GLAD_PLATFORM_UWP 0
  #endif
#endif

#ifdef __GNUC__
  #define GLAD_GNUC_EXTENSION __extension__
#else
  #define GLAD_GNUC_EXTENSION
#endif

#define GLAD_UNUSED(x) (void)(x)

#ifndef GLAD_API_CALL
  #if defined(GLAD_API_CALL_EXPORT)
    #if GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
      #if defined(GLAD_API_CALL_EXPORT_BUILD)
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllexport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllexport) extern
        #endif
      #else
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllimport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllimport) extern
        #endif
      #endif
    #elif defined(__GNUC__) && defined(GLAD_API_CALL_EXPORT_BUILD)
      #define GLAD_API_CALL __attribute__ ((visibility ("default"))) extern
    #else
      #define GLAD_API_CALL extern
    #endif
  #else
    #define GLAD_API_CALL extern
  #endif
#endif

#ifdef APIENTRY
  #define GLAD_API_PTR APIENTRY
#elif GLAD_PLATFORM_WIN32
  #define GLAD_API_PTR __stdcall
#else
  #define GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY GLAD_API_PTR
#endif

#define GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define GLAD_VERSION_MAJOR(version) (version / 10000)
#define GLAD_VERSION_MINOR(version) (version % 10000)

#define GLAD_GENERATOR_VERSION "2.0.4"

typedef void (*GLADapiproc)(void);

typedef GLADapiproc (*GLADloadfunc)(const char *name);
typedef GLADapiproc (*GLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);
typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args, ...);

#endif /* GLAD_PLATFORM_H_ */

#define GL_2D 0x0600
#define GL_2_BYTES 0x1407
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_3_BYTES 0x1408
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_4_BYTES 0x1409
#define GL_ACCUM 0x0100
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ADD 0x0104
#define GL_ADD_SIGNED 0x8574
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALPHA 0x1906
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_ALPHA_BITS 0x0D55
#define GL_ALPHA_INTEGER 0x8D97
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALWAYS 0x0207
#define GL_AMBIENT 0x1200
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_AUTO_NORMAL 0x0D80
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_AUX_BUFFERS 0x0C00
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGR_INTEGER 0x8D9A
#define GL_BITMAP 0x1A00
#define GL_BITMAP_TOKEN 0x0704
#define GL_BLEND 0x0BE2
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE 0x1905
#define GL_BLUE_BIAS 0x0D1B
#define GL_BLUE_BITS 0x0D54
#define GL_BLUE_INTEGER 0x8D96
#define GL_BLUE_SCALE 0x0D1A
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_BYTE 0x1400
#define GL_C3F_V3F 0x2A24
#define GL_C4F_N3F_V3F 0x2A26
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CCW 0x0901
#define GL_CLAMP 0x2900
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLEAR 0x1500
#define GL_CLEAR_BUFFER 0x82B4
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_COEFF 0x0A00
#define GL_COLOR 0x1800
#define GL_COLOR_ARRAY 0x8076
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_INDEX 0x1900
#define GL_COLOR_INDEXES 0x1603
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_MATERIAL 0x0B57
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COLOR_SUM 0x8458
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMBINE 0x8570
#define GL_COMBINE_ALPHA 0x8572
#define GL_COMBINE_RGB 0x8571
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONSTANT 0x8576
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_COORD_REPLACE 0x8862
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CURRENT_BIT 0x00000001
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CW 0x0900
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DECAL 0x2101
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_BIAS 0x0D1F
#define GL_DEPTH_BITS 0x0D56
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DIFFUSE 0x1201
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DISPLAY_LIST 0x82E7
#define GL_DITHER 0x0BD0
#define GL_DOMAIN 0x0A02
#define GL_DONT_CARE 0x1100
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_EDGE_FLAG 0x0B43
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_EMISSION 0x1600
#define GL_ENABLE_BIT 0x00002000
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EVAL_BIT 0x00010000
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_EXTENSIONS 0x1F03
#define GL_EYE_LINEAR 0x2400
#define GL_EYE_PLANE 0x2502
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FEEDBACK 0x1C01
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_FILL 0x1B02
#define GL_FILTER 0x829A
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIXED 0x140C
#define GL_FIXED_ONLY 0x891D
#define GL_FLAT 0x1D00
#define GL_FLOAT 0x1406
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FOG 0x0B60
#define GL_FOG_BIT 0x00000080
#define GL_FOG_COLOR 0x0B66
#define GL_FOG_COORD 0x8451
#define GL_FOG_COORDINATE 0x8451
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_END 0x0B64
#define GL_FOG_HINT 0x0C54
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_MODE 0x0B65
#define GL_FOG_START 0x0B63
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_FULL_SUPPORT 0x82B7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEQUAL 0x0206
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_BIAS 0x0D19
#define GL_GREEN_BITS 0x0D53
#define GL_GREEN_INTEGER 0x8D95
#define GL_GREEN_SCALE 0x0D18
#define GL_HALF_FLOAT 0x140B
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_HINT_BIT 0x00008000
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INDEX 0x8222
#define GL_INDEX_ARRAY 0x8077
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_BITS 0x0D51
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_INDEX_MODE 0x0C30
#define GL_INDEX_OFFSET 0x0D13
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INT 0x1404
#define GL_INTENSITY 0x8049
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERPOLATE 0x8575
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_KEEP 0x1E00
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_LIGHTING 0x0B50
#define GL_LIGHTING_BIT 0x00000040
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINES 0x0001
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_BIT 0x00000004
#define GL_LINE_LOOP 0x0002
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LINE_STRIP 0x0003
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_TOKEN 0x0702
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINK_STATUS 0x8B82
#define GL_LIST_BASE 0x0B32
#define GL_LIST_BIT 0x00020000
#define GL_LIST_INDEX 0x0B33
#define GL_LIST_MODE 0x0B30
#define GL_LOAD 0x0101
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_MAJOR_VERSION 0x821B
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_STENCIL 0x0D11
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATRIX_MODE 0x0BA0
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_WIDTH 0x827E
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MIN 0x8007
#define GL_MINOR_VERSION 0x821C
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIPMAP 0x8293
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MODELVIEW 0x1700
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_MODULATE 0x2100
#define GL_MULT 0x0103
#define GL_MULTISAMPLE 0x809D
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_N3F_V3F 0x2A25
#define GL_NAME_LENGTH 0x92F9
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_NAND 0x150E
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NORMALIZE 0x0BA1
#define GL_NORMAL_ARRAY 0x8075
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_MAP 0x8511
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_OBJECT_LINEAR 0x2401
#define GL_OBJECT_PLANE 0x2501
#define GL_OBJECT_TYPE 0x9112
#define GL_OFFSET 0x92FC
#define GL_ONE 1
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_ALPHA 0x859A
#define GL_OPERAND2_RGB 0x8592
#define GL_OR 0x1507
#define GL_ORDER 0x0A01
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_PATCHES 0x000E
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_VERTICES 0x8E72
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_BIT 0x00000002
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_POINT_SPRITE 0x8861
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POINT_TOKEN 0x0701
#define GL_POLYGON 0x0009
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_POLYGON_TOKEN 0x0703
#define GL_POSITION 0x1203
#define GL_PREVIOUS 0x8578
#define GL_PRIMARY_COLOR 0x8577
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROJECTION 0x1701
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_Q 0x2003
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUAD_STRIP 0x0008
#define GL_QUERY 0x82E3
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_WAIT 0x8E13
#define GL_R 0x2002
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_ONLY 0x88B8
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_READ_WRITE 0x88BA
#define GL_RED 0x1903
#define GL_RED_BIAS 0x0D15
#define GL_RED_BITS 0x0D52
#define GL_RED_INTEGER 0x8D94
#define GL_RED_SCALE 0x0D14
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFLECTION_MAP 0x8512
#define GL_RENDER 0x1C00
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERER 0x1F01
#define GL_RENDER_MODE 0x0C40
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RESCALE_NORMAL 0x803A
#define GL_RETURN 0x0102
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGBA_MODE 0x0C31
#define GL_RGB_INTEGER 0x8D98
#define GL_RGB_SCALE 0x8573
#define GL_RG_INTEGER 0x8228
#define GL_RIGHT 0x0407
#define GL_S 0x2000
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SCISSOR_BIT 0x00080000
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SELECT 0x1C02
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_SET 0x150F
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADE_MODEL 0x0B54
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHININESS 0x1601
#define GL_SHORT 0x1402
#define GL_SIGNALED 0x9119
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SINGLE_COLOR 0x81F9
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SMOOTH 0x1D01
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE2_ALPHA 0x858A
#define GL_SOURCE2_RGB 0x8582
#define GL_SPECULAR 0x1202
#define GL_SPHERE_MAP 0x2402
#define GL_SPOT_CUTOFF 0x1206
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SRC0_ALPHA 0x8588
#define GL_SRC0_RGB 0x8580
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC1_RGB 0x8581
#define GL_SRC2_ALPHA 0x858A
#define GL_SRC2_RGB 0x8582
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STENCIL 0x1802
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BITS 0x0D57
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_SUBTRACT 0x84E7
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_T 0x2001
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_V3F 0x2A27
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_T4F_V4F 0x2A28
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BIT 0x00040000
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_ENV 0x2300
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_VIEW 0x82B5
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_BIT 0x00001000
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRUE 1
#define GL_TYPE 0x92FA
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UPPER_LEFT 0x8CA2
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BIT 0x00000800
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_WAIT_FAILED 0x911D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_WRITE_ONLY 0x88B9
#define GL_XOR 0x1506
#define GL_ZERO 0
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17


#include <KHR/khrplatform.h>
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
typedef int GLint;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef int GLsizei;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif
typedef khronos_int64_t GLint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef void (GLAD_API_PTR *GLVULKANPROCNV)(void);


#define GL_VERSION_1_0 1
GLAD_API_CALL int GLAD_GL_VERSION_1_0;
#define GL_VERSION_1_1 1
GLAD_API_CALL int GLAD_GL_VERSION_1_1;
#define GL_VERSION_1_2 1
GLAD_API_CALL int GLAD_GL_VERSION_1_2;
#define GL_VERSION_1_3 1
GLAD_API_CALL int GLAD_GL_VERSION_1_3;
#define GL_VERSION_1_4 1
GLAD_API_CALL int GLAD_GL_VERSION_1_4;
#define GL_VERSION_1_5 1
GLAD_API_CALL int GLAD_GL_VERSION_1_5;
#define GL_VERSION_2_0 1
GLAD_API_CALL int GLAD_GL_VERSION_2_0;
#define GL_VERSION_2_1 1
GLAD_API_CALL int GLAD_GL_VERSION_2_1;
#define GL_VERSION_3_0 1
GLAD_API_CALL int GLAD_GL_VERSION_3_0;
#define GL_VERSION_3_1 1
GLAD_API_CALL int GLAD_GL_VERSION_3_1;
#define GL_VERSION_3_2 1
GLAD_API_CALL int GLAD_GL_VERSION_3_2;
#define GL_VERSION_3_3 1
GLAD_API_CALL int GLAD_GL_VERSION_3_3;
#define GL_VERSION_4_0 1
GLAD_API_CALL int GLAD_GL_VERSION_4_0;
#define GL_VERSION_4_1 1
GLAD_API_CALL int GLAD_GL_VERSION_4_1;
#define GL_VERSION_4_2 1
GLAD_API_CALL int GLAD_GL_VERSION_4_2;
#define GL_VERSION_4_3 1
GLAD_API_CALL int GLAD_GL_VERSION_4_3;
#define GL_EXT_texture_filter_anisotropic 1
GLAD_API_CALL int GLAD_GL_EXT_texture_filter_anisotropic;


typedef void (GLAD_API_PTR *PFNGLACCUMPROC)(GLenum op, GLfloat value);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTPROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLBEGINPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLCALLLISTPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void * lists);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void (GLAD_API_PTR *PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGVPROC)(const GLboolean * flag);
typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENDPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDLISTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
typedef void (GLAD_API_PTR *PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT1PROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT2PROC)(GLint i, GLint j);
typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat * buffer);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDPROC)(GLdouble coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDVPROC)(const GLdouble * coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFPROC)(GLfloat coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFVPROC)(const GLfloat * coord);
typedef void (GLAD_API_PTR *PFNGLFOGFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFOGFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFOGIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFOGIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef GLuint (GLAD_API_PTR *PFNGLGENLISTSPROC)(GLsizei range);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void * img);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint * v);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort * values);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte * mask);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef GLuint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef GLuint (GLAD_API_PTR *PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLINDEXDPROC)(GLdouble c);
typedef void (GLAD_API_PTR *PFNGLINDEXDVPROC)(const GLdouble * c);
typedef void (GLAD_API_PTR *PFNGLINDEXFPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLINDEXFVPROC)(const GLfloat * c);
typedef void (GLAD_API_PTR *PFNGLINDEXIPROC)(GLint c);
typedef void (GLAD_API_PTR *PFNGLINDEXIVPROC)(const GLint * c);
typedef void (GLAD_API_PTR *PFNGLINDEXSPROC)(GLshort c);
typedef void (GLAD_API_PTR *PFNGLINDEXSVPROC)(const GLshort * c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBPROC)(GLubyte c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBVPROC)(const GLubyte * c);
typedef void (GLAD_API_PTR *PFNGLINITNAMESPROC)(void);
typedef void (GLAD_API_PTR *PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISLISTPROC)(GLuint list);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLLISTBASEPROC)(GLuint base);
typedef void (GLAD_API_PTR *PFNGLLOADIDENTITYPROC)(void);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOADNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (GLAD_API_PTR *PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort * values);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (GLAD_API_PTR *PFNGLPOLYGONSTIPPLEPROC)(const GLubyte * mask);
typedef void (GLAD_API_PTR *PFNGLPOPATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPNAMEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLPUSHMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (GLAD_API_PTR *PFNGLRECTDVPROC)(const GLdouble * v1, const GLdouble * v2);
typedef void (GLAD_API_PTR *PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (GLAD_API_PTR *PFNGLRECTFVPROC)(const GLfloat * v1, const GLfloat * v2);
typedef void (GLAD_API_PTR *PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (GLAD_API_PTR *PFNGLRECTIVPROC)(const GLint * v1, const GLint * v2);
typedef void (GLAD_API_PTR *PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (GLAD_API_PTR *PFNGLRECTSVPROC)(const GLshort * v1, const GLshort * v2);
typedef void (GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef GLint (GLAD_API_PTR *PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint * color);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint * buffer);
typedef void (GLAD_API_PTR *PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (GLAD_API_PTR *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAD_API_PTR *PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint * indices);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SVPROC)(const GLshort * v);

#define glAccum gladptrs.glad_glAccum
#define glActiveShaderProgram gladptrs.glad_glActiveShaderProgram
#define glActiveTexture gladptrs.glad_glActiveTexture
#define glAlphaFunc gladptrs.gladptrs.glad_glAlphaFunc
#define glAreTexturesResident gladptrs.glad_glAreTexturesResident
#define glArrayElement gladptrs.glad_glArrayElement
#define glAttachShader gladptrs.glad_glAttachShader
#define glBegin gladptrs.glad_glBegin
#define glBeginConditionalRender gladptrs.glad_glBeginConditionalRender
#define glBeginQuery gladptrs.glad_glBeginQuery
#define glBeginQueryIndexed gladptrs.glad_glBeginQueryIndexed
#define glBeginTransformFeedback gladptrs.glad_glBeginTransformFeedback
#define glBindAttribLocation gladptrs.glad_glBindAttribLocation
#define glBindBuffer gladptrs.glad_glBindBuffer
#define glBindBufferBase gladptrs.glad_glBindBufferBase
#define glBindBufferRange gladptrs.glad_glBindBufferRange
#define glBindFragDataLocation gladptrs.glad_glBindFragDataLocation
#define glBindFragDataLocationIndexed gladptrs.glad_glBindFragDataLocationIndexed
#define glBindFramebuffer gladptrs.glad_glBindFramebuffer
#define glBindImageTexture gladptrs.glad_glBindImageTexture
#define glBindProgramPipeline gladptrs.glad_glBindProgramPipeline
#define glBindRenderbuffer gladptrs.glad_glBindRenderbuffer
#define glBindSampler gladptrs.glad_glBindSampler
#define glBindTexture gladptrs.glad_glBindTexture
#define glBindTransformFeedback gladptrs.glad_glBindTransformFeedback
#define glBindVertexArray gladptrs.glad_glBindVertexArray
#define glBindVertexBuffer gladptrs.glad_glBindVertexBuffer
#define glBitmap gladptrs.glad_glBitmap
#define glBlendColor gladptrs.glad_glBlendColor
#define glBlendEquation gladptrs.glad_glBlendEquation
#define glBlendEquationSeparate gladptrs.glad_glBlendEquationSeparate
#define glBlendEquationSeparatei gladptrs.glad_glBlendEquationSeparatei
#define glBlendEquationi gladptrs.glad_glBlendEquationi
#define glBlendFunc gladptrs.glad_glBlendFunc
#define glBlendFuncSeparate gladptrs.glad_glBlendFuncSeparate
#define glBlendFuncSeparatei gladptrs.glad_glBlendFuncSeparatei
#define glBlendFunci gladptrs.glad_glBlendFunci
#define glBlitFramebuffer gladptrs.glad_glBlitFramebuffer
#define glBufferData gladptrs.glad_glBufferData
#define glBufferSubData gladptrs.glad_glBufferSubData
#define glCallList gladptrs.glad_glCallList
#define glCallLists gladptrs.glad_glCallLists
#define glCheckFramebufferStatus gladptrs.glad_glCheckFramebufferStatus
#define glClampColor gladptrs.glad_glClampColor
#define glClear gladptrs.glad_glClear
#define glClearAccum gladptrs.glad_glClearAccum
#define glClearBufferData gladptrs.glad_glClearBufferData
#define glClearBufferSubData gladptrs.glad_glClearBufferSubData
#define glClearBufferfi gladptrs.glad_glClearBufferfi
#define glClearBufferfv gladptrs.glad_glClearBufferfv
#define glClearBufferiv gladptrs.glad_glClearBufferiv
#define glClearBufferuiv gladptrs.glad_glClearBufferuiv
#define glClearColor gladptrs.glad_glClearColor
#define glClearDepth gladptrs.glad_glClearDepth
#define glClearDepthf gladptrs.glad_glClearDepthf
#define glClearIndex gladptrs.glad_glClearIndex
#define glClearStencil gladptrs.glad_glClearStencil
#define glClientActiveTexture gladptrs.glad_glClientActiveTexture
#define glClientWaitSync gladptrs.glad_glClientWaitSync
#define glClipPlane gladptrs.glad_glClipPlane
#define glColor3b gladptrs.glad_glColor3b
#define glColor3bv gladptrs.glad_glColor3bv
#define glColor3d gladptrs.glad_glColor3d
#define glColor3dv gladptrs.glad_glColor3dv
#define glColor3f gladptrs.glad_glColor3f
#define glColor3fv gladptrs.glad_glColor3fv
#define glColor3i gladptrs.glad_glColor3i
#define glColor3iv gladptrs.glad_glColor3iv
#define glColor3s gladptrs.glad_glColor3s
#define glColor3sv gladptrs.glad_glColor3sv
#define glColor3ub gladptrs.glad_glColor3ub
#define glColor3ubv gladptrs.glad_glColor3ubv
#define glColor3ui gladptrs.glad_glColor3ui
#define glColor3uiv gladptrs.glad_glColor3uiv
#define glColor3us gladptrs.glad_glColor3us
#define glColor3usv gladptrs.glad_glColor3usv
#define glColor4b gladptrs.glad_glColor4b
#define glColor4bv gladptrs.glad_glColor4bv
#define glColor4d gladptrs.glad_glColor4d
#define glColor4dv gladptrs.glad_glColor4dv
#define glColor4f gladptrs.glad_glColor4f
#define glColor4fv gladptrs.glad_glColor4fv
#define glColor4i gladptrs.glad_glColor4i
#define glColor4iv gladptrs.glad_glColor4iv
#define glColor4s gladptrs.glad_glColor4s
#define glColor4sv gladptrs.glad_glColor4sv
#define glColor4ub gladptrs.glad_glColor4ub
#define glColor4ubv gladptrs.glad_glColor4ubv
#define glColor4ui gladptrs.glad_glColor4ui
#define glColor4uiv gladptrs.glad_glColor4uiv
#define glColor4us gladptrs.glad_glColor4us
#define glColor4usv gladptrs.glad_glColor4usv
#define glColorMask gladptrs.glad_glColorMask
#define glColorMaski gladptrs.glad_glColorMaski
#define glColorMaterial gladptrs.glad_glColorMaterial
#define glColorP3ui gladptrs.glad_glColorP3ui
#define glColorP3uiv gladptrs.glad_glColorP3uiv
#define glColorP4ui gladptrs.glad_glColorP4ui
#define glColorP4uiv gladptrs.glad_glColorP4uiv
#define glColorPointer gladptrs.glad_glColorPointer
#define glCompileShader gladptrs.glad_glCompileShader
#define glCompressedTexImage1D gladptrs.glad_glCompressedTexImage1D
#define glCompressedTexImage2D gladptrs.glad_glCompressedTexImage2D
#define glCompressedTexImage3D gladptrs.glad_glCompressedTexImage3D
#define glCompressedTexSubImage1D gladptrs.glad_glCompressedTexSubImage1D
#define glCompressedTexSubImage2D gladptrs.glad_glCompressedTexSubImage2D
#define glCompressedTexSubImage3D gladptrs.glad_glCompressedTexSubImage3D
#define glCopyBufferSubData gladptrs.glad_glCopyBufferSubData
#define glCopyImageSubData gladptrs.glad_glCopyImageSubData
#define glCopyPixels gladptrs.glad_glCopyPixels
#define glCopyTexImage1D gladptrs.glad_glCopyTexImage1D
#define glCopyTexImage2D gladptrs.glad_glCopyTexImage2D
#define glCopyTexSubImage1D gladptrs.glad_glCopyTexSubImage1D
#define glCopyTexSubImage2D gladptrs.glad_glCopyTexSubImage2D
#define glCopyTexSubImage3D gladptrs.glad_glCopyTexSubImage3D
#define glCreateProgram gladptrs.glad_glCreateProgram
#define glCreateShader gladptrs.glad_glCreateShader
#define glCreateShaderProgramv gladptrs.glad_glCreateShaderProgramv
#define glCullFace gladptrs.glad_glCullFace
#define glDebugMessageCallback gladptrs.glad_glDebugMessageCallback
#define glDebugMessageControl gladptrs.glad_glDebugMessageControl
#define glDebugMessageInsert gladptrs.glad_glDebugMessageInsert
#define glDeleteBuffers gladptrs.glad_glDeleteBuffers
#define glDeleteFramebuffers gladptrs.glad_glDeleteFramebuffers
#define glDeleteLists gladptrs.glad_glDeleteLists
#define glDeleteProgram gladptrs.glad_glDeleteProgram
#define glDeleteProgramPipelines gladptrs.glad_glDeleteProgramPipelines
#define glDeleteQueries gladptrs.glad_glDeleteQueries
#define glDeleteRenderbuffers gladptrs.glad_glDeleteRenderbuffers
#define glDeleteSamplers gladptrs.glad_glDeleteSamplers
#define glDeleteShader gladptrs.glad_glDeleteShader
#define glDeleteSync gladptrs.glad_glDeleteSync
#define glDeleteTextures gladptrs.glad_glDeleteTextures
#define glDeleteTransformFeedbacks gladptrs.glad_glDeleteTransformFeedbacks
#define glDeleteVertexArrays gladptrs.glad_glDeleteVertexArrays
#define glDepthFunc gladptrs.glad_glDepthFunc
#define glDepthMask gladptrs.glad_glDepthMask
#define glDepthRange gladptrs.glad_glDepthRange
#define glDepthRangeArrayv gladptrs.glad_glDepthRangeArrayv
#define glDepthRangeIndexed gladptrs.glad_glDepthRangeIndexed
#define glDepthRangef gladptrs.glad_glDepthRangef
#define glDetachShader gladptrs.glad_glDetachShader
#define glDisable gladptrs.glad_glDisable
#define glDisableClientState gladptrs.glad_glDisableClientState
#define glDisableVertexAttribArray gladptrs.glad_glDisableVertexAttribArray
#define glDisablei gladptrs.glad_glDisablei
#define glDispatchCompute gladptrs.glad_glDispatchCompute
#define glDispatchComputeIndirect gladptrs.glad_glDispatchComputeIndirect
#define glDrawArrays gladptrs.glad_glDrawArrays
#define glDrawArraysIndirect gladptrs.glad_glDrawArraysIndirect
#define glDrawArraysInstanced gladptrs.glad_glDrawArraysInstanced
#define glDrawArraysInstancedBaseInstance gladptrs.glad_glDrawArraysInstancedBaseInstance
#define glDrawBuffer gladptrs.glad_glDrawBuffer
#define glDrawBuffers gladptrs.glad_glDrawBuffers
#define glDrawElements gladptrs.glad_glDrawElements
#define glDrawElementsBaseVertex gladptrs.glad_glDrawElementsBaseVertex
#define glDrawElementsIndirect gladptrs.glad_glDrawElementsIndirect
#define glDrawElementsInstanced gladptrs.glad_glDrawElementsInstanced
#define glDrawElementsInstancedBaseInstance gladptrs.glad_glDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertex gladptrs.glad_glDrawElementsInstancedBaseVertex
#define glDrawElementsInstancedBaseVertexBaseInstance gladptrs.glad_glDrawElementsInstancedBaseVertexBaseInstance
#define glDrawPixels gladptrs.glad_glDrawPixels
#define glDrawRangeElements gladptrs.glad_glDrawRangeElements
#define glDrawRangeElementsBaseVertex gladptrs.glad_glDrawRangeElementsBaseVertex
#define glDrawTransformFeedback gladptrs.glad_glDrawTransformFeedback
#define glDrawTransformFeedbackInstanced gladptrs.glad_glDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStream gladptrs.glad_glDrawTransformFeedbackStream
#define glDrawTransformFeedbackStreamInstanced gladptrs.glad_glDrawTransformFeedbackStreamInstanced
#define glEdgeFlag gladptrs.glad_glEdgeFlag
#define glEdgeFlagPointer gladptrs.glad_glEdgeFlagPointer
#define glEdgeFlagv gladptrs.glad_glEdgeFlagv
#define glEnable gladptrs.glad_glEnable
#define glEnableClientState gladptrs.glad_glEnableClientState
#define glEnableVertexAttribArray gladptrs.glad_glEnableVertexAttribArray
#define glEnablei gladptrs.glad_glEnablei
#define glEnd gladptrs.glad_glEnd
#define glEndConditionalRender gladptrs.glad_glEndConditionalRender
#define glEndList gladptrs.glad_glEndList
#define glEndQuery gladptrs.glad_glEndQuery
#define glEndQueryIndexed gladptrs.glad_glEndQueryIndexed
#define glEndTransformFeedback gladptrs.glad_glEndTransformFeedback
#define glEvalCoord1d gladptrs.glad_glEvalCoord1d
#define glEvalCoord1dv gladptrs.glad_glEvalCoord1dv
#define glEvalCoord1f gladptrs.glad_glEvalCoord1f
#define glEvalCoord1fv gladptrs.glad_glEvalCoord1fv
#define glEvalCoord2d gladptrs.glad_glEvalCoord2d
#define glEvalCoord2dv gladptrs.glad_glEvalCoord2dv
#define glEvalCoord2f gladptrs.glad_glEvalCoord2f
#define glEvalCoord2fv gladptrs.glad_glEvalCoord2fv
#define glEvalMesh1 gladptrs.glad_glEvalMesh1
#define glEvalMesh2 gladptrs.glad_glEvalMesh2
#define glEvalPoint1 gladptrs.glad_glEvalPoint1
#define glEvalPoint2 gladptrs.glad_glEvalPoint2
#define glFeedbackBuffer gladptrs.glad_glFeedbackBuffer
#define glFenceSync gladptrs.glad_glFenceSync
#define glFinish gladptrs.glad_glFinish
#define glFlush gladptrs.glad_glFlush
#define glFlushMappedBufferRange gladptrs.glad_glFlushMappedBufferRange
#define glFogCoordPointer gladptrs.glad_glFogCoordPointer
#define glFogCoordd gladptrs.glad_glFogCoordd
#define glFogCoorddv gladptrs.glad_glFogCoorddv
#define glFogCoordf gladptrs.glad_glFogCoordf
#define glFogCoordfv gladptrs.glad_glFogCoordfv
#define glFogf gladptrs.glad_glFogf
#define glFogfv gladptrs.glad_glFogfv
#define glFogi gladptrs.glad_glFogi
#define glFogiv gladptrs.glad_glFogiv
#define glFramebufferParameteri gladptrs.glad_glFramebufferParameteri
#define glFramebufferRenderbuffer gladptrs.glad_glFramebufferRenderbuffer
#define glFramebufferTexture gladptrs.glad_glFramebufferTexture
#define glFramebufferTexture1D gladptrs.glad_glFramebufferTexture1D
#define glFramebufferTexture2D gladptrs.glad_glFramebufferTexture2D
#define glFramebufferTexture3D gladptrs.glad_glFramebufferTexture3D
#define glFramebufferTextureLayer gladptrs.glad_glFramebufferTextureLayer
#define glFrontFace gladptrs.glad_glFrontFace
#define glFrustum gladptrs.glad_glFrustum
#define glGenBuffers gladptrs.glad_glGenBuffers
#define glGenFramebuffers gladptrs.glad_glGenFramebuffers
#define glGenLists gladptrs.glad_glGenLists
#define glGenProgramPipelines gladptrs.glad_glGenProgramPipelines
#define glGenQueries gladptrs.glad_glGenQueries
#define glGenRenderbuffers gladptrs.glad_glGenRenderbuffers
#define glGenSamplers gladptrs.glad_glGenSamplers
#define glGenTextures gladptrs.glad_glGenTextures
#define glGenTransformFeedbacks gladptrs.glad_glGenTransformFeedbacks
#define glGenVertexArrays gladptrs.glad_glGenVertexArrays
#define glGenerateMipmap gladptrs.glad_glGenerateMipmap
#define glGetActiveAtomicCounterBufferiv gladptrs.glad_glGetActiveAtomicCounterBufferiv
#define glGetActiveAttrib gladptrs.glad_glGetActiveAttrib
#define glGetActiveSubroutineName gladptrs.glad_glGetActiveSubroutineName
#define glGetActiveSubroutineUniformName gladptrs.glad_glGetActiveSubroutineUniformName
#define glGetActiveSubroutineUniformiv gladptrs.glad_glGetActiveSubroutineUniformiv
#define glGetActiveUniform gladptrs.glad_glGetActiveUniform
#define glGetActiveUniformBlockName gladptrs.glad_glGetActiveUniformBlockName
#define glGetActiveUniformBlockiv gladptrs.glad_glGetActiveUniformBlockiv
#define glGetActiveUniformName gladptrs.glad_glGetActiveUniformName
#define glGetActiveUniformsiv gladptrs.glad_glGetActiveUniformsiv
#define glGetAttachedShaders gladptrs.glad_glGetAttachedShaders
#define glGetAttribLocation gladptrs.glad_glGetAttribLocation
#define glGetBooleani_v gladptrs.glad_glGetBooleani_v
#define glGetBooleanv gladptrs.glad_glGetBooleanv
#define glGetBufferParameteri64v gladptrs.glad_glGetBufferParameteri64v
#define glGetBufferParameteriv gladptrs.glad_glGetBufferParameteriv
#define glGetBufferPointerv gladptrs.glad_glGetBufferPointerv
#define glGetBufferSubData gladptrs.glad_glGetBufferSubData
#define glGetClipPlane gladptrs.glad_glGetClipPlane
#define glGetCompressedTexImage gladptrs.glad_glGetCompressedTexImage
#define glGetDebugMessageLog gladptrs.glad_glGetDebugMessageLog
#define glGetDoublei_v gladptrs.glad_glGetDoublei_v
#define glGetDoublev gladptrs.glad_glGetDoublev
#define glGetError gladptrs.glad_glGetError
#define glGetFloati_v gladptrs.glad_glGetFloati_v
#define glGetFloatv gladptrs.glad_glGetFloatv
#define glGetFragDataIndex gladptrs.glad_glGetFragDataIndex
#define glGetFragDataLocation gladptrs.glad_glGetFragDataLocation
#define glGetFramebufferAttachmentParameteriv gladptrs.glad_glGetFramebufferAttachmentParameteriv
#define glGetFramebufferParameteriv gladptrs.glad_glGetFramebufferParameteriv
#define glGetInteger64i_v gladptrs.glad_glGetInteger64i_v
#define glGetInteger64v gladptrs.glad_glGetInteger64v
#define glGetIntegeri_v gladptrs.glad_glGetIntegeri_v
#define glGetIntegerv gladptrs.glad_glGetIntegerv
#define glGetInternalformati64v gladptrs.glad_glGetInternalformati64v
#define glGetInternalformativ gladptrs.glad_glGetInternalformativ
#define glGetLightfv gladptrs.glad_glGetLightfv
#define glGetLightiv gladptrs.glad_glGetLightiv
#define glGetMapdv gladptrs.glad_glGetMapdv
#define glGetMapfv gladptrs.glad_glGetMapfv
#define glGetMapiv gladptrs.glad_glGetMapiv
#define glGetMaterialfv gladptrs.glad_glGetMaterialfv
#define glGetMaterialiv gladptrs.glad_glGetMaterialiv
#define glGetMultisamplefv gladptrs.glad_glGetMultisamplefv
#define glGetObjectLabel gladptrs.glad_glGetObjectLabel
#define glGetObjectPtrLabel gladptrs.glad_glGetObjectPtrLabel
#define glGetPixelMapfv gladptrs.glad_glGetPixelMapfv
#define glGetPixelMapuiv gladptrs.glad_glGetPixelMapuiv
#define glGetPixelMapusv gladptrs.glad_glGetPixelMapusv
#define glGetPointerv gladptrs.glad_glGetPointerv
#define glGetPolygonStipple gladptrs.glad_glGetPolygonStipple
#define glGetProgramBinary gladptrs.glad_glGetProgramBinary
#define glGetProgramInfoLog gladptrs.glad_glGetProgramInfoLog
#define glGetProgramInterfaceiv gladptrs.glad_glGetProgramInterfaceiv
#define glGetProgramPipelineInfoLog gladptrs.glad_glGetProgramPipelineInfoLog
#define glGetProgramPipelineiv gladptrs.glad_glGetProgramPipelineiv
#define glGetProgramResourceIndex gladptrs.glad_glGetProgramResourceIndex
#define glGetProgramResourceLocation gladptrs.glad_glGetProgramResourceLocation
#define glGetProgramResourceLocationIndex gladptrs.glad_glGetProgramResourceLocationIndex
#define glGetProgramResourceName gladptrs.glad_glGetProgramResourceName
#define glGetProgramResourceiv gladptrs.glad_glGetProgramResourceiv
#define glGetProgramStageiv gladptrs.glad_glGetProgramStageiv
#define glGetProgramiv gladptrs.glad_glGetProgramiv
#define glGetQueryIndexediv gladptrs.glad_glGetQueryIndexediv
#define glGetQueryObjecti64v gladptrs.glad_glGetQueryObjecti64v
#define glGetQueryObjectiv gladptrs.glad_glGetQueryObjectiv
#define glGetQueryObjectui64v gladptrs.glad_glGetQueryObjectui64v
#define glGetQueryObjectuiv gladptrs.glad_glGetQueryObjectuiv
#define glGetQueryiv gladptrs.glad_glGetQueryiv
#define glGetRenderbufferParameteriv gladptrs.glad_glGetRenderbufferParameteriv
#define glGetSamplerParameterIiv gladptrs.glad_glGetSamplerParameterIiv
#define glGetSamplerParameterIuiv gladptrs.glad_glGetSamplerParameterIuiv
#define glGetSamplerParameterfv gladptrs.glad_glGetSamplerParameterfv
#define glGetSamplerParameteriv gladptrs.glad_glGetSamplerParameteriv
#define glGetShaderInfoLog gladptrs.glad_glGetShaderInfoLog
#define glGetShaderPrecisionFormat gladptrs.glad_glGetShaderPrecisionFormat
#define glGetShaderSource gladptrs.glad_glGetShaderSource
#define glGetShaderiv gladptrs.glad_glGetShaderiv
#define glGetString gladptrs.glad_glGetString
#define glGetStringi gladptrs.glad_glGetStringi
#define glGetSubroutineIndex gladptrs.glad_glGetSubroutineIndex
#define glGetSubroutineUniformLocation gladptrs.glad_glGetSubroutineUniformLocation
#define glGetSynciv gladptrs.glad_glGetSynciv
#define glGetTexEnvfv gladptrs.glad_glGetTexEnvfv
#define glGetTexEnviv gladptrs.glad_glGetTexEnviv
#define glGetTexGendv gladptrs.glad_glGetTexGendv
#define glGetTexGenfv gladptrs.glad_glGetTexGenfv
#define glGetTexGeniv gladptrs.glad_glGetTexGeniv
#define glGetTexImage gladptrs.glad_glGetTexImage
#define glGetTexLevelParameterfv gladptrs.glad_glGetTexLevelParameterfv
#define glGetTexLevelParameteriv gladptrs.glad_glGetTexLevelParameteriv
#define glGetTexParameterIiv gladptrs.glad_glGetTexParameterIiv
#define glGetTexParameterIuiv gladptrs.glad_glGetTexParameterIuiv
#define glGetTexParameterfv gladptrs.glad_glGetTexParameterfv
#define glGetTexParameteriv gladptrs.glad_glGetTexParameteriv
#define glGetTransformFeedbackVarying gladptrs.glad_glGetTransformFeedbackVarying
#define glGetUniformBlockIndex gladptrs.glad_glGetUniformBlockIndex
#define glGetUniformIndices gladptrs.glad_glGetUniformIndices
#define glGetUniformLocation gladptrs.glad_glGetUniformLocation
#define glGetUniformSubroutineuiv gladptrs.glad_glGetUniformSubroutineuiv
#define glGetUniformdv gladptrs.glad_glGetUniformdv
#define glGetUniformfv gladptrs.glad_glGetUniformfv
#define glGetUniformiv gladptrs.glad_glGetUniformiv
#define glGetUniformuiv gladptrs.glad_glGetUniformuiv
#define glGetVertexAttribIiv gladptrs.glad_glGetVertexAttribIiv
#define glGetVertexAttribIuiv gladptrs.glad_glGetVertexAttribIuiv
#define glGetVertexAttribLdv gladptrs.glad_glGetVertexAttribLdv
#define glGetVertexAttribPointerv gladptrs.glad_glGetVertexAttribPointerv
#define glGetVertexAttribdv gladptrs.glad_glGetVertexAttribdv
#define glGetVertexAttribfv gladptrs.glad_glGetVertexAttribfv
#define glGetVertexAttribiv gladptrs.glad_glGetVertexAttribiv
#define glHint gladptrs.glad_glHint
#define glIndexMask gladptrs.glad_glIndexMask
#define glIndexPointer gladptrs.glad_glIndexPointer
#define glIndexd gladptrs.glad_glIndexd
#define glIndexdv gladptrs.glad_glIndexdv
#define glIndexf gladptrs.glad_glIndexf
#define glIndexfv gladptrs.glad_glIndexfv
#define glIndexi gladptrs.glad_glIndexi
#define glIndexiv gladptrs.glad_glIndexiv
#define glIndexs gladptrs.glad_glIndexs
#define glIndexsv gladptrs.glad_glIndexsv
#define glIndexub gladptrs.glad_glIndexub
#define glIndexubv gladptrs.glad_glIndexubv
#define glInitNames gladptrs.glad_glInitNames
#define glInterleavedArrays gladptrs.glad_glInterleavedArrays
#define glInvalidateBufferData gladptrs.glad_glInvalidateBufferData
#define glInvalidateBufferSubData gladptrs.glad_glInvalidateBufferSubData
#define glInvalidateFramebuffer gladptrs.glad_glInvalidateFramebuffer
#define glInvalidateSubFramebuffer gladptrs.glad_glInvalidateSubFramebuffer
#define glInvalidateTexImage gladptrs.glad_glInvalidateTexImage
#define glInvalidateTexSubImage gladptrs.glad_glInvalidateTexSubImage
#define glIsBuffer gladptrs.glad_glIsBuffer
#define glIsEnabled gladptrs.glad_glIsEnabled
#define glIsEnabledi gladptrs.glad_glIsEnabledi
#define glIsFramebuffer gladptrs.glad_glIsFramebuffer
#define glIsList gladptrs.glad_glIsList
#define glIsProgram gladptrs.glad_glIsProgram
#define glIsProgramPipeline gladptrs.glad_glIsProgramPipeline
#define glIsQuery gladptrs.glad_glIsQuery
#define glIsRenderbuffer gladptrs.glad_glIsRenderbuffer
#define glIsSampler gladptrs.glad_glIsSampler
#define glIsShader gladptrs.glad_glIsShader
#define glIsSync gladptrs.glad_glIsSync
#define glIsTexture gladptrs.glad_glIsTexture
#define glIsTransformFeedback gladptrs.glad_glIsTransformFeedback
#define glIsVertexArray gladptrs.glad_glIsVertexArray
#define glLightModelf gladptrs.glad_glLightModelf
#define glLightModelfv gladptrs.glad_glLightModelfv
#define glLightModeli gladptrs.glad_glLightModeli
#define glLightModeliv gladptrs.glad_glLightModeliv
#define glLightf gladptrs.glad_glLightf
#define glLightfv gladptrs.glad_glLightfv
#define glLighti gladptrs.glad_glLighti
#define glLightiv gladptrs.glad_glLightiv
#define glLineStipple gladptrs.glad_glLineStipple
#define glLineWidth gladptrs.glad_glLineWidth
#define glLinkProgram gladptrs.glad_glLinkProgram
#define glListBase gladptrs.glad_glListBase
#define glLoadIdentity gladptrs.glad_glLoadIdentity
#define glLoadMatrixd gladptrs.glad_glLoadMatrixd
#define glLoadMatrixf gladptrs.glad_glLoadMatrixf
#define glLoadName gladptrs.glad_glLoadName
#define glLoadTransposeMatrixd gladptrs.glad_glLoadTransposeMatrixd
#define glLoadTransposeMatrixf gladptrs.glad_glLoadTransposeMatrixf
#define glLogicOp gladptrs.glad_glLogicOp
#define glMap1d gladptrs.glad_glMap1d
#define glMap1f gladptrs.glad_glMap1f
#define glMap2d gladptrs.glad_glMap2d
#define glMap2f gladptrs.glad_glMap2f
#define glMapBuffer gladptrs.glad_glMapBuffer
#define glMapBufferRange gladptrs.glad_glMapBufferRange
#define glMapGrid1d gladptrs.glad_glMapGrid1d
#define glMapGrid1f gladptrs.glad_glMapGrid1f
#define glMapGrid2d gladptrs.glad_glMapGrid2d
#define glMapGrid2f gladptrs.glad_glMapGrid2f
#define glMaterialf gladptrs.glad_glMaterialf
#define glMaterialfv gladptrs.glad_glMaterialfv
#define glMateriali gladptrs.glad_glMateriali
#define glMaterialiv gladptrs.glad_glMaterialiv
#define glMatrixMode gladptrs.glad_glMatrixMode
#define glMemoryBarrier gladptrs.glad_glMemoryBarrier
#define glMinSampleShading gladptrs.glad_glMinSampleShading
#define glMultMatrixd gladptrs.glad_glMultMatrixd
#define glMultMatrixf gladptrs.glad_glMultMatrixf
#define glMultTransposeMatrixd gladptrs.glad_glMultTransposeMatrixd
#define glMultTransposeMatrixf gladptrs.glad_glMultTransposeMatrixf
#define glMultiDrawArrays gladptrs.glad_glMultiDrawArrays
#define glMultiDrawArraysIndirect gladptrs.glad_glMultiDrawArraysIndirect
#define glMultiDrawElements gladptrs.glad_glMultiDrawElements
#define glMultiDrawElementsBaseVertex gladptrs.glad_glMultiDrawElementsBaseVertex
#define glMultiDrawElementsIndirect gladptrs.glad_glMultiDrawElementsIndirect
#define glMultiTexCoord1d gladptrs.glad_glMultiTexCoord1d
#define glMultiTexCoord1dv gladptrs.glad_glMultiTexCoord1dv
#define glMultiTexCoord1f gladptrs.glad_glMultiTexCoord1f
#define glMultiTexCoord1fv gladptrs.glad_glMultiTexCoord1fv
#define glMultiTexCoord1i gladptrs.glad_glMultiTexCoord1i
#define glMultiTexCoord1iv gladptrs.glad_glMultiTexCoord1iv
#define glMultiTexCoord1s gladptrs.glad_glMultiTexCoord1s
#define glMultiTexCoord1sv gladptrs.glad_glMultiTexCoord1sv
#define glMultiTexCoord2d gladptrs.glad_glMultiTexCoord2d
#define glMultiTexCoord2dv gladptrs.glad_glMultiTexCoord2dv
#define glMultiTexCoord2f gladptrs.glad_glMultiTexCoord2f
#define glMultiTexCoord2fv gladptrs.glad_glMultiTexCoord2fv
#define glMultiTexCoord2i gladptrs.glad_glMultiTexCoord2i
#define glMultiTexCoord2iv gladptrs.glad_glMultiTexCoord2iv
#define glMultiTexCoord2s gladptrs.glad_glMultiTexCoord2s
#define glMultiTexCoord2sv gladptrs.glad_glMultiTexCoord2sv
#define glMultiTexCoord3d gladptrs.glad_glMultiTexCoord3d
#define glMultiTexCoord3dv gladptrs.glad_glMultiTexCoord3dv
#define glMultiTexCoord3f gladptrs.glad_glMultiTexCoord3f
#define glMultiTexCoord3fv gladptrs.glad_glMultiTexCoord3fv
#define glMultiTexCoord3i gladptrs.glad_glMultiTexCoord3i
#define glMultiTexCoord3iv gladptrs.glad_glMultiTexCoord3iv
#define glMultiTexCoord3s gladptrs.glad_glMultiTexCoord3s
#define glMultiTexCoord3sv gladptrs.glad_glMultiTexCoord3sv
#define glMultiTexCoord4d gladptrs.glad_glMultiTexCoord4d
#define glMultiTexCoord4dv gladptrs.glad_glMultiTexCoord4dv
#define glMultiTexCoord4f gladptrs.glad_glMultiTexCoord4f
#define glMultiTexCoord4fv gladptrs.glad_glMultiTexCoord4fv
#define glMultiTexCoord4i gladptrs.glad_glMultiTexCoord4i
#define glMultiTexCoord4iv gladptrs.glad_glMultiTexCoord4iv
#define glMultiTexCoord4s gladptrs.glad_glMultiTexCoord4s
#define glMultiTexCoord4sv gladptrs.glad_glMultiTexCoord4sv
#define glMultiTexCoordP1ui gladptrs.glad_glMultiTexCoordP1ui
#define glMultiTexCoordP1uiv gladptrs.glad_glMultiTexCoordP1uiv
#define glMultiTexCoordP2ui gladptrs.glad_glMultiTexCoordP2ui
#define glMultiTexCoordP2uiv gladptrs.glad_glMultiTexCoordP2uiv
#define glMultiTexCoordP3ui gladptrs.glad_glMultiTexCoordP3ui
#define glMultiTexCoordP3uiv gladptrs.glad_glMultiTexCoordP3uiv
#define glMultiTexCoordP4ui gladptrs.glad_glMultiTexCoordP4ui
#define glMultiTexCoordP4uiv gladptrs.glad_glMultiTexCoordP4uiv
#define glNewList gladptrs.glad_glNewList
#define glNormal3b gladptrs.glad_glNormal3b
#define glNormal3bv gladptrs.glad_glNormal3bv
#define glNormal3d gladptrs.glad_glNormal3d
#define glNormal3dv gladptrs.glad_glNormal3dv
#define glNormal3f gladptrs.glad_glNormal3f
#define glNormal3fv gladptrs.glad_glNormal3fv
#define glNormal3i gladptrs.glad_glNormal3i
#define glNormal3iv gladptrs.glad_glNormal3iv
#define glNormal3s gladptrs.glad_glNormal3s
#define glNormal3sv gladptrs.glad_glNormal3sv
#define glNormalP3ui gladptrs.glad_glNormalP3ui
#define glNormalP3uiv gladptrs.glad_glNormalP3uiv
#define glNormalPointer gladptrs.glad_glNormalPointer
#define glObjectLabel gladptrs.glad_glObjectLabel
#define glObjectPtrLabel gladptrs.glad_glObjectPtrLabel
#define glOrtho gladptrs.glad_glOrtho
#define glPassThrough gladptrs.glad_glPassThrough
#define glPatchParameterfv gladptrs.glad_glPatchParameterfv
#define glPatchParameteri gladptrs.glad_glPatchParameteri
#define glPauseTransformFeedback gladptrs.glad_glPauseTransformFeedback
#define glPixelMapfv gladptrs.glad_glPixelMapfv
#define glPixelMapuiv gladptrs.glad_glPixelMapuiv
#define glPixelMapusv gladptrs.glad_glPixelMapusv
#define glPixelStoref gladptrs.glad_glPixelStoref
#define glPixelStorei gladptrs.glad_glPixelStorei
#define glPixelTransferf gladptrs.glad_glPixelTransferf
#define glPixelTransferi gladptrs.glad_glPixelTransferi
#define glPixelZoom gladptrs.glad_glPixelZoom
#define glPointParameterf gladptrs.glad_glPointParameterf
#define glPointParameterfv gladptrs.glad_glPointParameterfv
#define glPointParameteri gladptrs.glad_glPointParameteri
#define glPointParameteriv gladptrs.glad_glPointParameteriv
#define glPointSize gladptrs.glad_glPointSize
#define glPolygonMode gladptrs.glad_glPolygonMode
#define glPolygonOffset gladptrs.glad_glPolygonOffset
#define glPolygonStipple gladptrs.glad_glPolygonStipple
#define glPopAttrib gladptrs.glad_glPopAttrib
#define glPopClientAttrib gladptrs.glad_glPopClientAttrib
#define glPopDebugGroup gladptrs.glad_glPopDebugGroup
#define glPopMatrix gladptrs.glad_glPopMatrix
#define glPopName gladptrs.glad_glPopName
#define glPrimitiveRestartIndex gladptrs.glad_glPrimitiveRestartIndex
#define glPrioritizeTextures gladptrs.glad_glPrioritizeTextures
#define glProgramBinary gladptrs.glad_glProgramBinary
#define glProgramParameteri gladptrs.glad_glProgramParameteri
#define glProgramUniform1d gladptrs.glad_glProgramUniform1d
#define glProgramUniform1dv gladptrs.glad_glProgramUniform1dv
#define glProgramUniform1f gladptrs.glad_glProgramUniform1f
#define glProgramUniform1fv gladptrs.glad_glProgramUniform1fv
#define glProgramUniform1i gladptrs.glad_glProgramUniform1i
#define glProgramUniform1iv gladptrs.glad_glProgramUniform1iv
#define glProgramUniform1ui gladptrs.glad_glProgramUniform1ui
#define glProgramUniform1uiv gladptrs.glad_glProgramUniform1uiv
#define glProgramUniform2d gladptrs.glad_glProgramUniform2d
#define glProgramUniform2dv gladptrs.glad_glProgramUniform2dv
#define glProgramUniform2f gladptrs.glad_glProgramUniform2f
#define glProgramUniform2fv gladptrs.glad_glProgramUniform2fv
#define glProgramUniform2i gladptrs.glad_glProgramUniform2i
#define glProgramUniform2iv gladptrs.glad_glProgramUniform2iv
#define glProgramUniform2ui gladptrs.glad_glProgramUniform2ui
#define glProgramUniform2uiv gladptrs.glad_glProgramUniform2uiv
#define glProgramUniform3d gladptrs.glad_glProgramUniform3d
#define glProgramUniform3dv gladptrs.glad_glProgramUniform3dv
#define glProgramUniform3f gladptrs.glad_glProgramUniform3f
#define glProgramUniform3fv gladptrs.glad_glProgramUniform3fv
#define glProgramUniform3i gladptrs.glad_glProgramUniform3i
#define glProgramUniform3iv gladptrs.glad_glProgramUniform3iv
#define glProgramUniform3ui gladptrs.glad_glProgramUniform3ui
#define glProgramUniform3uiv gladptrs.glad_glProgramUniform3uiv
#define glProgramUniform4d gladptrs.glad_glProgramUniform4d
#define glProgramUniform4dv gladptrs.glad_glProgramUniform4dv
#define glProgramUniform4f gladptrs.glad_glProgramUniform4f
#define glProgramUniform4fv gladptrs.glad_glProgramUniform4fv
#define glProgramUniform4i gladptrs.glad_glProgramUniform4i
#define glProgramUniform4iv gladptrs.glad_glProgramUniform4iv
#define glProgramUniform4ui gladptrs.glad_glProgramUniform4ui
#define glProgramUniform4uiv gladptrs.glad_glProgramUniform4uiv
#define glProgramUniformMatrix2dv gladptrs.glad_glProgramUniformMatrix2dv
#define glProgramUniformMatrix2fv gladptrs.glad_glProgramUniformMatrix2fv
#define glProgramUniformMatrix2x3dv gladptrs.glad_glProgramUniformMatrix2x3dv
#define glProgramUniformMatrix2x3fv gladptrs.glad_glProgramUniformMatrix2x3fv
#define glProgramUniformMatrix2x4dv gladptrs.glad_glProgramUniformMatrix2x4dv
#define glProgramUniformMatrix2x4fv gladptrs.glad_glProgramUniformMatrix2x4fv
#define glProgramUniformMatrix3dv gladptrs.glad_glProgramUniformMatrix3dv
#define glProgramUniformMatrix3fv gladptrs.glad_glProgramUniformMatrix3fv
#define glProgramUniformMatrix3x2dv gladptrs.glad_glProgramUniformMatrix3x2dv
#define glProgramUniformMatrix3x2fv gladptrs.glad_glProgramUniformMatrix3x2fv
#define glProgramUniformMatrix3x4dv gladptrs.glad_glProgramUniformMatrix3x4dv
#define glProgramUniformMatrix3x4fv gladptrs.glad_glProgramUniformMatrix3x4fv
#define glProgramUniformMatrix4dv gladptrs.glad_glProgramUniformMatrix4dv
#define glProgramUniformMatrix4fv gladptrs.glad_glProgramUniformMatrix4fv
#define glProgramUniformMatrix4x2dv gladptrs.glad_glProgramUniformMatrix4x2dv
#define glProgramUniformMatrix4x2fv gladptrs.glad_glProgramUniformMatrix4x2fv
#define glProgramUniformMatrix4x3dv gladptrs.glad_glProgramUniformMatrix4x3dv
#define glProgramUniformMatrix4x3fv gladptrs.glad_glProgramUniformMatrix4x3fv
#define glProvokingVertex gladptrs.glad_glProvokingVertex
#define glPushAttrib gladptrs.glad_glPushAttrib
#define glPushClientAttrib gladptrs.glad_glPushClientAttrib
#define glPushDebugGroup gladptrs.glad_glPushDebugGroup
#define glPushMatrix gladptrs.glad_glPushMatrix
#define glPushName gladptrs.glad_glPushName
#define glQueryCounter gladptrs.glad_glQueryCounter
#define glRasterPos2d gladptrs.glad_glRasterPos2d
#define glRasterPos2dv gladptrs.glad_glRasterPos2dv
#define glRasterPos2f gladptrs.glad_glRasterPos2f
#define glRasterPos2fv gladptrs.glad_glRasterPos2fv
#define glRasterPos2i gladptrs.glad_glRasterPos2i
#define glRasterPos2iv gladptrs.glad_glRasterPos2iv
#define glRasterPos2s gladptrs.glad_glRasterPos2s
#define glRasterPos2sv gladptrs.glad_glRasterPos2sv
#define glRasterPos3d gladptrs.glad_glRasterPos3d
#define glRasterPos3dv gladptrs.glad_glRasterPos3dv
#define glRasterPos3f gladptrs.glad_glRasterPos3f
#define glRasterPos3fv gladptrs.glad_glRasterPos3fv
#define glRasterPos3i gladptrs.glad_glRasterPos3i
#define glRasterPos3iv gladptrs.glad_glRasterPos3iv
#define glRasterPos3s gladptrs.glad_glRasterPos3s
#define glRasterPos3sv gladptrs.glad_glRasterPos3sv
#define glRasterPos4d gladptrs.glad_glRasterPos4d
#define glRasterPos4dv gladptrs.glad_glRasterPos4dv
#define glRasterPos4f gladptrs.glad_glRasterPos4f
#define glRasterPos4fv gladptrs.glad_glRasterPos4fv
#define glRasterPos4i gladptrs.glad_glRasterPos4i
#define glRasterPos4iv gladptrs.glad_glRasterPos4iv
#define glRasterPos4s gladptrs.glad_glRasterPos4s
#define glRasterPos4sv gladptrs.glad_glRasterPos4sv
#define glReadBuffer gladptrs.glad_glReadBuffer
#define glReadPixels gladptrs.glad_glReadPixels
#define glRectd gladptrs.glad_glRectd
#define glRectdv gladptrs.glad_glRectdv
#define glRectf gladptrs.glad_glRectf
#define glRectfv gladptrs.glad_glRectfv
#define glRecti gladptrs.glad_glRecti
#define glRectiv gladptrs.glad_glRectiv
#define glRects gladptrs.glad_glRects
#define glRectsv gladptrs.glad_glRectsv
#define glReleaseShaderCompiler gladptrs.glad_glReleaseShaderCompiler
#define glRenderMode gladptrs.glad_glRenderMode
#define glRenderbufferStorage gladptrs.glad_glRenderbufferStorage
#define glRenderbufferStorageMultisample gladptrs.glad_glRenderbufferStorageMultisample
#define glResumeTransformFeedback gladptrs.glad_glResumeTransformFeedback
#define glRotated gladptrs.glad_glRotated
#define glRotatef gladptrs.glad_glRotatef
#define glSampleCoverage gladptrs.glad_glSampleCoverage
#define glSampleMaski gladptrs.glad_glSampleMaski
#define glSamplerParameterIiv gladptrs.glad_glSamplerParameterIiv
#define glSamplerParameterIuiv gladptrs.glad_glSamplerParameterIuiv
#define glSamplerParameterf gladptrs.glad_glSamplerParameterf
#define glSamplerParameterfv gladptrs.glad_glSamplerParameterfv
#define glSamplerParameteri gladptrs.glad_glSamplerParameteri
#define glSamplerParameteriv gladptrs.glad_glSamplerParameteriv
#define glScaled gladptrs.glad_glScaled
#define glScalef gladptrs.glad_glScalef
#define glScissor gladptrs.glad_glScissor
#define glScissorArrayv gladptrs.glad_glScissorArrayv
#define glScissorIndexed gladptrs.glad_glScissorIndexed
#define glScissorIndexedv gladptrs.glad_glScissorIndexedv
#define glSecondaryColor3b gladptrs.glad_glSecondaryColor3b
#define glSecondaryColor3bv gladptrs.glad_glSecondaryColor3bv
#define glSecondaryColor3d gladptrs.glad_glSecondaryColor3d
#define glSecondaryColor3dv gladptrs.glad_glSecondaryColor3dv
#define glSecondaryColor3f gladptrs.glad_glSecondaryColor3f
#define glSecondaryColor3fv gladptrs.glad_glSecondaryColor3fv
#define glSecondaryColor3i gladptrs.glad_glSecondaryColor3i
#define glSecondaryColor3iv gladptrs.glad_glSecondaryColor3iv
#define glSecondaryColor3s gladptrs.glad_glSecondaryColor3s
#define glSecondaryColor3sv gladptrs.glad_glSecondaryColor3sv
#define glSecondaryColor3ub gladptrs.glad_glSecondaryColor3ub
#define glSecondaryColor3ubv gladptrs.glad_glSecondaryColor3ubv
#define glSecondaryColor3ui gladptrs.glad_glSecondaryColor3ui
#define glSecondaryColor3uiv gladptrs.glad_glSecondaryColor3uiv
#define glSecondaryColor3us gladptrs.glad_glSecondaryColor3us
#define glSecondaryColor3usv gladptrs.glad_glSecondaryColor3usv
#define glSecondaryColorP3ui gladptrs.glad_glSecondaryColorP3ui
#define glSecondaryColorP3uiv gladptrs.glad_glSecondaryColorP3uiv
#define glSecondaryColorPointer gladptrs.glad_glSecondaryColorPointer
#define glSelectBuffer gladptrs.glad_glSelectBuffer
#define glShadeModel gladptrs.glad_glShadeModel
#define glShaderBinary gladptrs.glad_glShaderBinary
#define glShaderSource gladptrs.glad_glShaderSource
#define glShaderStorageBlockBinding gladptrs.glad_glShaderStorageBlockBinding
#define glStencilFunc gladptrs.glad_glStencilFunc
#define glStencilFuncSeparate gladptrs.glad_glStencilFuncSeparate
#define glStencilMask gladptrs.glad_glStencilMask
#define glStencilMaskSeparate gladptrs.glad_glStencilMaskSeparate
#define glStencilOp gladptrs.glad_glStencilOp
#define glStencilOpSeparate gladptrs.glad_glStencilOpSeparate
#define glTexBuffer gladptrs.glad_glTexBuffer
#define glTexBufferRange gladptrs.glad_glTexBufferRange
#define glTexCoord1d gladptrs.glad_glTexCoord1d
#define glTexCoord1dv gladptrs.glad_glTexCoord1dv
#define glTexCoord1f gladptrs.glad_glTexCoord1f
#define glTexCoord1fv gladptrs.glad_glTexCoord1fv
#define glTexCoord1i gladptrs.glad_glTexCoord1i
#define glTexCoord1iv gladptrs.glad_glTexCoord1iv
#define glTexCoord1s gladptrs.glad_glTexCoord1s
#define glTexCoord1sv gladptrs.glad_glTexCoord1sv
#define glTexCoord2d gladptrs.glad_glTexCoord2d
#define glTexCoord2dv gladptrs.glad_glTexCoord2dv
#define glTexCoord2f gladptrs.glad_glTexCoord2f
#define glTexCoord2fv gladptrs.glad_glTexCoord2fv
#define glTexCoord2i gladptrs.glad_glTexCoord2i
#define glTexCoord2iv gladptrs.glad_glTexCoord2iv
#define glTexCoord2s gladptrs.glad_glTexCoord2s
#define glTexCoord2sv gladptrs.glad_glTexCoord2sv
#define glTexCoord3d gladptrs.glad_glTexCoord3d
#define glTexCoord3dv gladptrs.glad_glTexCoord3dv
#define glTexCoord3f gladptrs.glad_glTexCoord3f
#define glTexCoord3fv gladptrs.glad_glTexCoord3fv
#define glTexCoord3i gladptrs.glad_glTexCoord3i
#define glTexCoord3iv gladptrs.glad_glTexCoord3iv
#define glTexCoord3s gladptrs.glad_glTexCoord3s
#define glTexCoord3sv gladptrs.glad_glTexCoord3sv
#define glTexCoord4d gladptrs.glad_glTexCoord4d
#define glTexCoord4dv gladptrs.glad_glTexCoord4dv
#define glTexCoord4f gladptrs.glad_glTexCoord4f
#define glTexCoord4fv gladptrs.glad_glTexCoord4fv
#define glTexCoord4i gladptrs.glad_glTexCoord4i
#define glTexCoord4iv gladptrs.glad_glTexCoord4iv
#define glTexCoord4s gladptrs.glad_glTexCoord4s
#define glTexCoord4sv gladptrs.glad_glTexCoord4sv
#define glTexCoordP1ui gladptrs.glad_glTexCoordP1ui
#define glTexCoordP1uiv gladptrs.glad_glTexCoordP1uiv
#define glTexCoordP2ui gladptrs.glad_glTexCoordP2ui
#define glTexCoordP2uiv gladptrs.glad_glTexCoordP2uiv
#define glTexCoordP3ui gladptrs.glad_glTexCoordP3ui
#define glTexCoordP3uiv gladptrs.glad_glTexCoordP3uiv
#define glTexCoordP4ui gladptrs.glad_glTexCoordP4ui
#define glTexCoordP4uiv gladptrs.glad_glTexCoordP4uiv
#define glTexCoordPointer gladptrs.glad_glTexCoordPointer
#define glTexEnvf gladptrs.glad_glTexEnvf
#define glTexEnvfv gladptrs.glad_glTexEnvfv
#define glTexEnvi gladptrs.glad_glTexEnvi
#define glTexEnviv gladptrs.glad_glTexEnviv
#define glTexGend gladptrs.glad_glTexGend
#define glTexGendv gladptrs.glad_glTexGendv
#define glTexGenf gladptrs.glad_glTexGenf
#define glTexGenfv gladptrs.glad_glTexGenfv
#define glTexGeni gladptrs.glad_glTexGeni
#define glTexGeniv gladptrs.glad_glTexGeniv
#define glTexImage1D gladptrs.glad_glTexImage1D
#define glTexImage2D gladptrs.glad_glTexImage2D
#define glTexImage2DMultisample gladptrs.glad_glTexImage2DMultisample
#define glTexImage3D gladptrs.glad_glTexImage3D
#define glTexImage3DMultisample gladptrs.glad_glTexImage3DMultisample
#define glTexParameterIiv gladptrs.glad_glTexParameterIiv
#define glTexParameterIuiv gladptrs.glad_glTexParameterIuiv
#define glTexParameterf gladptrs.glad_glTexParameterf
#define glTexParameterfv gladptrs.glad_glTexParameterfv
#define glTexParameteri gladptrs.glad_glTexParameteri
#define glTexParameteriv gladptrs.glad_glTexParameteriv
#define glTexStorage1D gladptrs.glad_glTexStorage1D
#define glTexStorage2D gladptrs.glad_glTexStorage2D
#define glTexStorage2DMultisample gladptrs.glad_glTexStorage2DMultisample
#define glTexStorage3D gladptrs.glad_glTexStorage3D
#define glTexStorage3DMultisample gladptrs.glad_glTexStorage3DMultisample
#define glTexSubImage1D gladptrs.glad_glTexSubImage1D
#define glTexSubImage2D gladptrs.glad_glTexSubImage2D
#define glTexSubImage3D gladptrs.glad_glTexSubImage3D
#define glTextureView gladptrs.glad_glTextureView
#define glTransformFeedbackVaryings gladptrs.glad_glTransformFeedbackVaryings
#define glTranslated gladptrs.glad_glTranslated
#define glTranslatef gladptrs.glad_glTranslatef
#define glUniform1d gladptrs.glad_glUniform1d
#define glUniform1dv gladptrs.glad_glUniform1dv
#define glUniform1f gladptrs.glad_glUniform1f
#define glUniform1fv gladptrs.glad_glUniform1fv
#define glUniform1i gladptrs.glad_glUniform1i
#define glUniform1iv gladptrs.glad_glUniform1iv
#define glUniform1ui gladptrs.glad_glUniform1ui
#define glUniform1uiv gladptrs.glad_glUniform1uiv
#define glUniform2d gladptrs.glad_glUniform2d
#define glUniform2dv gladptrs.glad_glUniform2dv
#define glUniform2f gladptrs.glad_glUniform2f
#define glUniform2fv gladptrs.glad_glUniform2fv
#define glUniform2i gladptrs.glad_glUniform2i
#define glUniform2iv gladptrs.glad_glUniform2iv
#define glUniform2ui gladptrs.glad_glUniform2ui
#define glUniform2uiv gladptrs.glad_glUniform2uiv
#define glUniform3d gladptrs.glad_glUniform3d
#define glUniform3dv gladptrs.glad_glUniform3dv
#define glUniform3f gladptrs.glad_glUniform3f
#define glUniform3fv gladptrs.glad_glUniform3fv
#define glUniform3i gladptrs.glad_glUniform3i
#define glUniform3iv gladptrs.glad_glUniform3iv
#define glUniform3ui gladptrs.glad_glUniform3ui
#define glUniform3uiv gladptrs.glad_glUniform3uiv
#define glUniform4d gladptrs.glad_glUniform4d
#define glUniform4dv gladptrs.glad_glUniform4dv
#define glUniform4f gladptrs.glad_glUniform4f
#define glUniform4fv gladptrs.glad_glUniform4fv
#define glUniform4i gladptrs.glad_glUniform4i
#define glUniform4iv gladptrs.glad_glUniform4iv
#define glUniform4ui gladptrs.glad_glUniform4ui
#define glUniform4uiv gladptrs.glad_glUniform4uiv
#define glUniformBlockBinding gladptrs.glad_glUniformBlockBinding
#define glUniformMatrix2dv gladptrs.glad_glUniformMatrix2dv
#define glUniformMatrix2fv gladptrs.glad_glUniformMatrix2fv
#define glUniformMatrix2x3dv gladptrs.glad_glUniformMatrix2x3dv
#define glUniformMatrix2x3fv gladptrs.glad_glUniformMatrix2x3fv
#define glUniformMatrix2x4dv gladptrs.glad_glUniformMatrix2x4dv
#define glUniformMatrix2x4fv gladptrs.glad_glUniformMatrix2x4fv
#define glUniformMatrix3dv gladptrs.glad_glUniformMatrix3dv
#define glUniformMatrix3fv gladptrs.glad_glUniformMatrix3fv
#define glUniformMatrix3x2dv gladptrs.glad_glUniformMatrix3x2dv
#define glUniformMatrix3x2fv gladptrs.glad_glUniformMatrix3x2fv
#define glUniformMatrix3x4dv gladptrs.glad_glUniformMatrix3x4dv
#define glUniformMatrix3x4fv gladptrs.glad_glUniformMatrix3x4fv
#define glUniformMatrix4dv gladptrs.glad_glUniformMatrix4dv
#define glUniformMatrix4fv gladptrs.glad_glUniformMatrix4fv
#define glUniformMatrix4x2dv gladptrs.glad_glUniformMatrix4x2dv
#define glUniformMatrix4x2fv gladptrs.glad_glUniformMatrix4x2fv
#define glUniformMatrix4x3dv gladptrs.glad_glUniformMatrix4x3dv
#define glUniformMatrix4x3fv gladptrs.glad_glUniformMatrix4x3fv
#define glUniformSubroutinesuiv gladptrs.glad_glUniformSubroutinesuiv
#define glUnmapBuffer gladptrs.glad_glUnmapBuffer
#define glUseProgram gladptrs.glad_glUseProgram
#define glUseProgramStages gladptrs.glad_glUseProgramStages
#define glValidateProgram gladptrs.glad_glValidateProgram
#define glValidateProgramPipeline gladptrs.glad_glValidateProgramPipeline
#define glVertex2d gladptrs.glad_glVertex2d
#define glVertex2dv gladptrs.glad_glVertex2dv
#define glVertex2f gladptrs.glad_glVertex2f
#define glVertex2fv gladptrs.glad_glVertex2fv
#define glVertex2i gladptrs.glad_glVertex2i
#define glVertex2iv gladptrs.glad_glVertex2iv
#define glVertex2s gladptrs.glad_glVertex2s
#define glVertex2sv gladptrs.glad_glVertex2sv
#define glVertex3d gladptrs.glad_glVertex3d
#define glVertex3dv gladptrs.glad_glVertex3dv
#define glVertex3f gladptrs.glad_glVertex3f
#define glVertex3fv gladptrs.glad_glVertex3fv
#define glVertex3i gladptrs.glad_glVertex3i
#define glVertex3iv gladptrs.glad_glVertex3iv
#define glVertex3s gladptrs.glad_glVertex3s
#define glVertex3sv gladptrs.glad_glVertex3sv
#define glVertex4d gladptrs.glad_glVertex4d
#define glVertex4dv gladptrs.glad_glVertex4dv
#define glVertex4f gladptrs.glad_glVertex4f
#define glVertex4fv gladptrs.glad_glVertex4fv
#define glVertex4i gladptrs.glad_glVertex4i
#define glVertex4iv gladptrs.glad_glVertex4iv
#define glVertex4s gladptrs.glad_glVertex4s
#define glVertex4sv gladptrs.glad_glVertex4sv
#define glVertexAttrib1d gladptrs.glad_glVertexAttrib1d
#define glVertexAttrib1dv gladptrs.glad_glVertexAttrib1dv
#define glVertexAttrib1f gladptrs.glad_glVertexAttrib1f
#define glVertexAttrib1fv gladptrs.glad_glVertexAttrib1fv
#define glVertexAttrib1s gladptrs.glad_glVertexAttrib1s
#define glVertexAttrib1sv gladptrs.glad_glVertexAttrib1sv
#define glVertexAttrib2d gladptrs.glad_glVertexAttrib2d
#define glVertexAttrib2dv gladptrs.glad_glVertexAttrib2dv
#define glVertexAttrib2f gladptrs.glad_glVertexAttrib2f
#define glVertexAttrib2fv gladptrs.glad_glVertexAttrib2fv
#define glVertexAttrib2s gladptrs.glad_glVertexAttrib2s
#define glVertexAttrib2sv gladptrs.glad_glVertexAttrib2sv
#define glVertexAttrib3d gladptrs.glad_glVertexAttrib3d
#define glVertexAttrib3dv gladptrs.glad_glVertexAttrib3dv
#define glVertexAttrib3f gladptrs.glad_glVertexAttrib3f
#define glVertexAttrib3fv gladptrs.glad_glVertexAttrib3fv
#define glVertexAttrib3s gladptrs.glad_glVertexAttrib3s
#define glVertexAttrib3sv gladptrs.glad_glVertexAttrib3sv
#define glVertexAttrib4Nbv gladptrs.glad_glVertexAttrib4Nbv
#define glVertexAttrib4Niv gladptrs.glad_glVertexAttrib4Niv
#define glVertexAttrib4Nsv gladptrs.glad_glVertexAttrib4Nsv
#define glVertexAttrib4Nub gladptrs.glad_glVertexAttrib4Nub
#define glVertexAttrib4Nubv gladptrs.glad_glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv gladptrs.glad_glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv gladptrs.glad_glVertexAttrib4Nusv
#define glVertexAttrib4bv gladptrs.glad_glVertexAttrib4bv
#define glVertexAttrib4d gladptrs.glad_glVertexAttrib4d
#define glVertexAttrib4dv gladptrs.glad_glVertexAttrib4dv
#define glVertexAttrib4f gladptrs.glad_glVertexAttrib4f
#define glVertexAttrib4fv gladptrs.glad_glVertexAttrib4fv
#define glVertexAttrib4iv gladptrs.glad_glVertexAttrib4iv
#define glVertexAttrib4s gladptrs.glad_glVertexAttrib4s
#define glVertexAttrib4sv gladptrs.glad_glVertexAttrib4sv
#define glVertexAttrib4ubv gladptrs.glad_glVertexAttrib4ubv
#define glVertexAttrib4uiv gladptrs.glad_glVertexAttrib4uiv
#define glVertexAttrib4usv gladptrs.glad_glVertexAttrib4usv
#define glVertexAttribBinding gladptrs.glad_glVertexAttribBinding
#define glVertexAttribDivisor gladptrs.glad_glVertexAttribDivisor
#define glVertexAttribFormat gladptrs.glad_glVertexAttribFormat
#define glVertexAttribI1i gladptrs.glad_glVertexAttribI1i
#define glVertexAttribI1iv gladptrs.glad_glVertexAttribI1iv
#define glVertexAttribI1ui gladptrs.glad_glVertexAttribI1ui
#define glVertexAttribI1uiv gladptrs.glad_glVertexAttribI1uiv
#define glVertexAttribI2i gladptrs.glad_glVertexAttribI2i
#define glVertexAttribI2iv gladptrs.glad_glVertexAttribI2iv
#define glVertexAttribI2ui gladptrs.glad_glVertexAttribI2ui
#define glVertexAttribI2uiv gladptrs.glad_glVertexAttribI2uiv
#define glVertexAttribI3i gladptrs.glad_glVertexAttribI3i
#define glVertexAttribI3iv gladptrs.glad_glVertexAttribI3iv
#define glVertexAttribI3ui gladptrs.glad_glVertexAttribI3ui
#define glVertexAttribI3uiv gladptrs.glad_glVertexAttribI3uiv
#define glVertexAttribI4bv gladptrs.glad_glVertexAttribI4bv
#define glVertexAttribI4i gladptrs.glad_glVertexAttribI4i
#define glVertexAttribI4iv gladptrs.glad_glVertexAttribI4iv
#define glVertexAttribI4sv gladptrs.glad_glVertexAttribI4sv
#define glVertexAttribI4ubv gladptrs.glad_glVertexAttribI4ubv
#define glVertexAttribI4ui gladptrs.glad_glVertexAttribI4ui
#define glVertexAttribI4uiv gladptrs.glad_glVertexAttribI4uiv
#define glVertexAttribI4usv gladptrs.glad_glVertexAttribI4usv
#define glVertexAttribIFormat gladptrs.glad_glVertexAttribIFormat
#define glVertexAttribIPointer gladptrs.glad_glVertexAttribIPointer
#define glVertexAttribL1d gladptrs.glad_glVertexAttribL1d
#define glVertexAttribL1dv gladptrs.glad_glVertexAttribL1dv
#define glVertexAttribL2d gladptrs.glad_glVertexAttribL2d
#define glVertexAttribL2dv gladptrs.glad_glVertexAttribL2dv
#define glVertexAttribL3d gladptrs.glad_glVertexAttribL3d
#define glVertexAttribL3dv gladptrs.glad_glVertexAttribL3dv
#define glVertexAttribL4d gladptrs.glad_glVertexAttribL4d
#define glVertexAttribL4dv gladptrs.glad_glVertexAttribL4dv
#define glVertexAttribLFormat gladptrs.glad_glVertexAttribLFormat
#define glVertexAttribLPointer gladptrs.glad_glVertexAttribLPointer
#define glVertexAttribP1ui gladptrs.glad_glVertexAttribP1ui
#define glVertexAttribP1uiv gladptrs.glad_glVertexAttribP1uiv
#define glVertexAttribP2ui gladptrs.glad_glVertexAttribP2ui
#define glVertexAttribP2uiv gladptrs.glad_glVertexAttribP2uiv
#define glVertexAttribP3ui gladptrs.glad_glVertexAttribP3ui
#define glVertexAttribP3uiv gladptrs.glad_glVertexAttribP3uiv
#define glVertexAttribP4ui gladptrs.glad_glVertexAttribP4ui
#define glVertexAttribP4uiv gladptrs.glad_glVertexAttribP4uiv
#define glVertexAttribPointer gladptrs.glad_glVertexAttribPointer
#define glVertexBindingDivisor gladptrs.glad_glVertexBindingDivisor
#define glVertexP2ui gladptrs.glad_glVertexP2ui
#define glVertexP2uiv gladptrs.glad_glVertexP2uiv
#define glVertexP3ui gladptrs.glad_glVertexP3ui
#define glVertexP3uiv gladptrs.glad_glVertexP3uiv
#define glVertexP4ui gladptrs.glad_glVertexP4ui
#define glVertexP4uiv gladptrs.glad_glVertexP4uiv
#define glVertexPointer gladptrs.glad_glVertexPointer
#define glViewport gladptrs.glad_glViewport
#define glViewportArrayv gladptrs.glad_glViewportArrayv
#define glViewportIndexedf gladptrs.glad_glViewportIndexedf
#define glViewportIndexedfv gladptrs.glad_glViewportIndexedfv
#define glWaitSync gladptrs.glad_glWaitSync
#define glWindowPos2d gladptrs.glad_glWindowPos2d
#define glWindowPos2dv gladptrs.glad_glWindowPos2dv
#define glWindowPos2f gladptrs.glad_glWindowPos2f
#define glWindowPos2fv gladptrs.glad_glWindowPos2fv
#define glWindowPos2i gladptrs.glad_glWindowPos2i
#define glWindowPos2iv gladptrs.glad_glWindowPos2iv
#define glWindowPos2s gladptrs.glad_glWindowPos2s
#define glWindowPos2sv gladptrs.glad_glWindowPos2sv
#define glWindowPos3d gladptrs.glad_glWindowPos3d
#define glWindowPos3dv gladptrs.glad_glWindowPos3dv
#define glWindowPos3f gladptrs.glad_glWindowPos3f
#define glWindowPos3fv gladptrs.glad_glWindowPos3fv
#define glWindowPos3i gladptrs.glad_glWindowPos3i
#define glWindowPos3iv gladptrs.glad_glWindowPos3iv
#define glWindowPos3s gladptrs.glad_glWindowPos3s
#define glWindowPos3sv gladptrs.glad_glWindowPos3sv

struct GLADPTRS
{
    PFNGLACCUMPROC glad_glAccum;
    PFNGLACTIVESHADERPROGRAMPROC glad_glActiveShaderProgram;
    PFNGLACTIVETEXTUREPROC glad_glActiveTexture;
    PFNGLALPHAFUNCPROC glad_glAlphaFunc;
    PFNGLARETEXTURESRESIDENTPROC glad_glAreTexturesResident;
    PFNGLARRAYELEMENTPROC glad_glArrayElement;
    PFNGLATTACHSHADERPROC glad_glAttachShader;
    PFNGLBEGINPROC glad_glBegin;
    PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender;
    PFNGLBEGINQUERYPROC glad_glBeginQuery;
    PFNGLBEGINQUERYINDEXEDPROC glad_glBeginQueryIndexed;
    PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback;
    PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation;
    PFNGLBINDBUFFERPROC glad_glBindBuffer;
    PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase;
    PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange;
    PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation;
    PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed;
    PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer;
    PFNGLBINDIMAGETEXTUREPROC glad_glBindImageTexture;
    PFNGLBINDPROGRAMPIPELINEPROC glad_glBindProgramPipeline;
    PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer;
    PFNGLBINDSAMPLERPROC glad_glBindSampler;
    PFNGLBINDTEXTUREPROC glad_glBindTexture;
    PFNGLBINDTRANSFORMFEEDBACKPROC glad_glBindTransformFeedback;
    PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray;
    PFNGLBINDVERTEXBUFFERPROC glad_glBindVertexBuffer;
    PFNGLBITMAPPROC glad_glBitmap;
    PFNGLBLENDCOLORPROC glad_glBlendColor;
    PFNGLBLENDEQUATIONPROC glad_glBlendEquation;
    PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate;
    PFNGLBLENDEQUATIONSEPARATEIPROC glad_glBlendEquationSeparatei;
    PFNGLBLENDEQUATIONIPROC glad_glBlendEquationi;
    PFNGLBLENDFUNCPROC glad_glBlendFunc;
    PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate;
    PFNGLBLENDFUNCSEPARATEIPROC glad_glBlendFuncSeparatei;
    PFNGLBLENDFUNCIPROC glad_glBlendFunci;
    PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer;
    PFNGLBUFFERDATAPROC glad_glBufferData;
    PFNGLBUFFERSUBDATAPROC glad_glBufferSubData;
    PFNGLCALLLISTPROC glad_glCallList;
    PFNGLCALLLISTSPROC glad_glCallLists;
    PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus;
    PFNGLCLAMPCOLORPROC glad_glClampColor;
    PFNGLCLEARPROC glad_glClear;
    PFNGLCLEARACCUMPROC glad_glClearAccum;
    PFNGLCLEARBUFFERDATAPROC glad_glClearBufferData;
    PFNGLCLEARBUFFERSUBDATAPROC glad_glClearBufferSubData;
    PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi;
    PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv;
    PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv;
    PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv;
    PFNGLCLEARCOLORPROC glad_glClearColor;
    PFNGLCLEARDEPTHPROC glad_glClearDepth;
    PFNGLCLEARDEPTHFPROC glad_glClearDepthf;
    PFNGLCLEARINDEXPROC glad_glClearIndex;
    PFNGLCLEARSTENCILPROC glad_glClearStencil;
    PFNGLCLIENTACTIVETEXTUREPROC glad_glClientActiveTexture;
    PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync;
    PFNGLCLIPPLANEPROC glad_glClipPlane;
    PFNGLCOLOR3BPROC glad_glColor3b;
    PFNGLCOLOR3BVPROC glad_glColor3bv;
    PFNGLCOLOR3DPROC glad_glColor3d;
    PFNGLCOLOR3DVPROC glad_glColor3dv;
    PFNGLCOLOR3FPROC glad_glColor3f;
    PFNGLCOLOR3FVPROC glad_glColor3fv;
    PFNGLCOLOR3IPROC glad_glColor3i;
    PFNGLCOLOR3IVPROC glad_glColor3iv;
    PFNGLCOLOR3SPROC glad_glColor3s;
    PFNGLCOLOR3SVPROC glad_glColor3sv;
    PFNGLCOLOR3UBPROC glad_glColor3ub;
    PFNGLCOLOR3UBVPROC glad_glColor3ubv;
    PFNGLCOLOR3UIPROC glad_glColor3ui;
    PFNGLCOLOR3UIVPROC glad_glColor3uiv;
    PFNGLCOLOR3USPROC glad_glColor3us;
    PFNGLCOLOR3USVPROC glad_glColor3usv;
    PFNGLCOLOR4BPROC glad_glColor4b;
    PFNGLCOLOR4BVPROC glad_glColor4bv;
    PFNGLCOLOR4DPROC glad_glColor4d;
    PFNGLCOLOR4DVPROC glad_glColor4dv;
    PFNGLCOLOR4FPROC glad_glColor4f;
    PFNGLCOLOR4FVPROC glad_glColor4fv;
    PFNGLCOLOR4IPROC glad_glColor4i;
    PFNGLCOLOR4IVPROC glad_glColor4iv;
    PFNGLCOLOR4SPROC glad_glColor4s;
    PFNGLCOLOR4SVPROC glad_glColor4sv;
    PFNGLCOLOR4UBPROC glad_glColor4ub;
    PFNGLCOLOR4UBVPROC glad_glColor4ubv;
    PFNGLCOLOR4UIPROC glad_glColor4ui;
    PFNGLCOLOR4UIVPROC glad_glColor4uiv;
    PFNGLCOLOR4USPROC glad_glColor4us;
    PFNGLCOLOR4USVPROC glad_glColor4usv;
    PFNGLCOLORMASKPROC glad_glColorMask;
    PFNGLCOLORMASKIPROC glad_glColorMaski;
    PFNGLCOLORMATERIALPROC glad_glColorMaterial;
    PFNGLCOLORP3UIPROC glad_glColorP3ui;
    PFNGLCOLORP3UIVPROC glad_glColorP3uiv;
    PFNGLCOLORP4UIPROC glad_glColorP4ui;
    PFNGLCOLORP4UIVPROC glad_glColorP4uiv;
    PFNGLCOLORPOINTERPROC glad_glColorPointer;
    PFNGLCOMPILESHADERPROC glad_glCompileShader;
    PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D;
    PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D;
    PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D;
    PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D;
    PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D;
    PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D;
    PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData;
    PFNGLCOPYIMAGESUBDATAPROC glad_glCopyImageSubData;
    PFNGLCOPYPIXELSPROC glad_glCopyPixels;
    PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D;
    PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D;
    PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D;
    PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D;
    PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D;
    PFNGLCREATEPROGRAMPROC glad_glCreateProgram;
    PFNGLCREATESHADERPROC glad_glCreateShader;
    PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv;
    PFNGLCULLFACEPROC glad_glCullFace;
    PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback;
    PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl;
    PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert;
    PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers;
    PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers;
    PFNGLDELETELISTSPROC glad_glDeleteLists;
    PFNGLDELETEPROGRAMPROC glad_glDeleteProgram;
    PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines;
    PFNGLDELETEQUERIESPROC glad_glDeleteQueries;
    PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers;
    PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers;
    PFNGLDELETESHADERPROC glad_glDeleteShader;
    PFNGLDELETESYNCPROC glad_glDeleteSync;
    PFNGLDELETETEXTURESPROC glad_glDeleteTextures;
    PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks;
    PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays;
    PFNGLDEPTHFUNCPROC glad_glDepthFunc;
    PFNGLDEPTHMASKPROC glad_glDepthMask;
    PFNGLDEPTHRANGEPROC glad_glDepthRange;
    PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv;
    PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed;
    PFNGLDEPTHRANGEFPROC glad_glDepthRangef;
    PFNGLDETACHSHADERPROC glad_glDetachShader;
    PFNGLDISABLEPROC glad_glDisable;
    PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState;
    PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray;
    PFNGLDISABLEIPROC glad_glDisablei;
    PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute;
    PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect;
    PFNGLDRAWARRAYSPROC glad_glDrawArrays;
    PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect;
    PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced;
    PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance;
    PFNGLDRAWBUFFERPROC glad_glDrawBuffer;
    PFNGLDRAWBUFFERSPROC glad_glDrawBuffers;
    PFNGLDRAWELEMENTSPROC glad_glDrawElements;
    PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex;
    PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect;
    PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced;
    PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance;
    PFNGLDRAWPIXELSPROC glad_glDrawPixels;
    PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements;
    PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex;
    PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback;
    PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced;
    PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream;
    PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced;
    PFNGLEDGEFLAGPROC glad_glEdgeFlag;
    PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer;
    PFNGLEDGEFLAGVPROC glad_glEdgeFlagv;
    PFNGLENABLEPROC glad_glEnable;
    PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState;
    PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray;
    PFNGLENABLEIPROC glad_glEnablei;
    PFNGLENDPROC glad_glEnd;
    PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender;
    PFNGLENDLISTPROC glad_glEndList;
    PFNGLENDQUERYPROC glad_glEndQuery;
    PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed;
    PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback;
    PFNGLEVALCOORD1DPROC glad_glEvalCoord1d;
    PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv;
    PFNGLEVALCOORD1FPROC glad_glEvalCoord1f;
    PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv;
    PFNGLEVALCOORD2DPROC glad_glEvalCoord2d;
    PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv;
    PFNGLEVALCOORD2FPROC glad_glEvalCoord2f;
    PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv;
    PFNGLEVALMESH1PROC glad_glEvalMesh1;
    PFNGLEVALMESH2PROC glad_glEvalMesh2;
    PFNGLEVALPOINT1PROC glad_glEvalPoint1;
    PFNGLEVALPOINT2PROC glad_glEvalPoint2;
    PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer;
    PFNGLFENCESYNCPROC glad_glFenceSync;
    PFNGLFINISHPROC glad_glFinish;
    PFNGLFLUSHPROC glad_glFlush;
    PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange;
    PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer;
    PFNGLFOGCOORDDPROC glad_glFogCoordd;
    PFNGLFOGCOORDDVPROC glad_glFogCoorddv;
    PFNGLFOGCOORDFPROC glad_glFogCoordf;
    PFNGLFOGCOORDFVPROC glad_glFogCoordfv;
    PFNGLFOGFPROC glad_glFogf;
    PFNGLFOGFVPROC glad_glFogfv;
    PFNGLFOGIPROC glad_glFogi;
    PFNGLFOGIVPROC glad_glFogiv;
    PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri;
    PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer;
    PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture;
    PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D;
    PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D;
    PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D;
    PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer;
    PFNGLFRONTFACEPROC glad_glFrontFace;
    PFNGLFRUSTUMPROC glad_glFrustum;
    PFNGLGENBUFFERSPROC glad_glGenBuffers;
    PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers;
    PFNGLGENLISTSPROC glad_glGenLists;
    PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines;
    PFNGLGENQUERIESPROC glad_glGenQueries;
    PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers;
    PFNGLGENSAMPLERSPROC glad_glGenSamplers;
    PFNGLGENTEXTURESPROC glad_glGenTextures;
    PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks;
    PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays;
    PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap;
    PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv;
    PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib;
    PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName;
    PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName;
    PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv;
    PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform;
    PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName;
    PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv;
    PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName;
    PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv;
    PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders;
    PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation;
    PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v;
    PFNGLGETBOOLEANVPROC glad_glGetBooleanv;
    PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v;
    PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv;
    PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv;
    PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData;
    PFNGLGETCLIPPLANEPROC glad_glGetClipPlane;
    PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage;
    PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog;
    PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v;
    PFNGLGETDOUBLEVPROC glad_glGetDoublev;
    PFNGLGETERRORPROC glad_glGetError;
    PFNGLGETFLOATI_VPROC glad_glGetFloati_v;
    PFNGLGETFLOATVPROC glad_glGetFloatv;
    PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex;
    PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation;
    PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv;
    PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv;
    PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v;
    PFNGLGETINTEGER64VPROC glad_glGetInteger64v;
    PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v;
    PFNGLGETINTEGERVPROC glad_glGetIntegerv;
    PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v;
    PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ;
    PFNGLGETLIGHTFVPROC glad_glGetLightfv;
    PFNGLGETLIGHTIVPROC glad_glGetLightiv;
    PFNGLGETMAPDVPROC glad_glGetMapdv;
    PFNGLGETMAPFVPROC glad_glGetMapfv;
    PFNGLGETMAPIVPROC glad_glGetMapiv;
    PFNGLGETMATERIALFVPROC glad_glGetMaterialfv;
    PFNGLGETMATERIALIVPROC glad_glGetMaterialiv;
    PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv;
    PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel;
    PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel;
    PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv;
    PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv;
    PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv;
    PFNGLGETPOINTERVPROC glad_glGetPointerv;
    PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple;
    PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary;
    PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog;
    PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv;
    PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog;
    PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv;
    PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex;
    PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation;
    PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex;
    PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName;
    PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv;
    PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv;
    PFNGLGETPROGRAMIVPROC glad_glGetProgramiv;
    PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv;
    PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v;
    PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv;
    PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v;
    PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv;
    PFNGLGETQUERYIVPROC glad_glGetQueryiv;
    PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv;
    PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv;
    PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv;
    PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv;
    PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv;
    PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog;
    PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat;
    PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource;
    PFNGLGETSHADERIVPROC glad_glGetShaderiv;
    PFNGLGETSTRINGPROC glad_glGetString;
    PFNGLGETSTRINGIPROC glad_glGetStringi;
    PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex;
    PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation;
    PFNGLGETSYNCIVPROC glad_glGetSynciv;
    PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv;
    PFNGLGETTEXENVIVPROC glad_glGetTexEnviv;
    PFNGLGETTEXGENDVPROC glad_glGetTexGendv;
    PFNGLGETTEXGENFVPROC glad_glGetTexGenfv;
    PFNGLGETTEXGENIVPROC glad_glGetTexGeniv;
    PFNGLGETTEXIMAGEPROC glad_glGetTexImage;
    PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv;
    PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv;
    PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv;
    PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv;
    PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv;
    PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv;
    PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying;
    PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex;
    PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices;
    PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation;
    PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv;
    PFNGLGETUNIFORMDVPROC glad_glGetUniformdv;
    PFNGLGETUNIFORMFVPROC glad_glGetUniformfv;
    PFNGLGETUNIFORMIVPROC glad_glGetUniformiv;
    PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv;
    PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv;
    PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv;
    PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv;
    PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv;
    PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv;
    PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv;
    PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv;
    PFNGLHINTPROC glad_glHint;
    PFNGLINDEXMASKPROC glad_glIndexMask;
    PFNGLINDEXPOINTERPROC glad_glIndexPointer;
    PFNGLINDEXDPROC glad_glIndexd;
    PFNGLINDEXDVPROC glad_glIndexdv;
    PFNGLINDEXFPROC glad_glIndexf;
    PFNGLINDEXFVPROC glad_glIndexfv;
    PFNGLINDEXIPROC glad_glIndexi;
    PFNGLINDEXIVPROC glad_glIndexiv;
    PFNGLINDEXSPROC glad_glIndexs;
    PFNGLINDEXSVPROC glad_glIndexsv;
    PFNGLINDEXUBPROC glad_glIndexub;
    PFNGLINDEXUBVPROC glad_glIndexubv;
    PFNGLINITNAMESPROC glad_glInitNames;
    PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays;
    PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData;
    PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData;
    PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer;
    PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer;
    PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage;
    PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage;
    PFNGLISBUFFERPROC glad_glIsBuffer;
    PFNGLISENABLEDPROC glad_glIsEnabled;
    PFNGLISENABLEDIPROC glad_glIsEnabledi;
    PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer;
    PFNGLISLISTPROC glad_glIsList;
    PFNGLISPROGRAMPROC glad_glIsProgram;
    PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline;
    PFNGLISQUERYPROC glad_glIsQuery;
    PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer;
    PFNGLISSAMPLERPROC glad_glIsSampler;
    PFNGLISSHADERPROC glad_glIsShader;
    PFNGLISSYNCPROC glad_glIsSync;
    PFNGLISTEXTUREPROC glad_glIsTexture;
    PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback;
    PFNGLISVERTEXARRAYPROC glad_glIsVertexArray;
    PFNGLLIGHTMODELFPROC glad_glLightModelf;
    PFNGLLIGHTMODELFVPROC glad_glLightModelfv;
    PFNGLLIGHTMODELIPROC glad_glLightModeli;
    PFNGLLIGHTMODELIVPROC glad_glLightModeliv;
    PFNGLLIGHTFPROC glad_glLightf;
    PFNGLLIGHTFVPROC glad_glLightfv;
    PFNGLLIGHTIPROC glad_glLighti;
    PFNGLLIGHTIVPROC glad_glLightiv;
    PFNGLLINESTIPPLEPROC glad_glLineStipple;
    PFNGLLINEWIDTHPROC glad_glLineWidth;
    PFNGLLINKPROGRAMPROC glad_glLinkProgram;
    PFNGLLISTBASEPROC glad_glListBase;
    PFNGLLOADIDENTITYPROC glad_glLoadIdentity;
    PFNGLLOADMATRIXDPROC glad_glLoadMatrixd;
    PFNGLLOADMATRIXFPROC glad_glLoadMatrixf;
    PFNGLLOADNAMEPROC glad_glLoadName;
    PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd;
    PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf;
    PFNGLLOGICOPPROC glad_glLogicOp;
    PFNGLMAP1DPROC glad_glMap1d;
    PFNGLMAP1FPROC glad_glMap1f;
    PFNGLMAP2DPROC glad_glMap2d;
    PFNGLMAP2FPROC glad_glMap2f;
    PFNGLMAPBUFFERPROC glad_glMapBuffer;
    PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange;
    PFNGLMAPGRID1DPROC glad_glMapGrid1d;
    PFNGLMAPGRID1FPROC glad_glMapGrid1f;
    PFNGLMAPGRID2DPROC glad_glMapGrid2d;
    PFNGLMAPGRID2FPROC glad_glMapGrid2f;
    PFNGLMATERIALFPROC glad_glMaterialf;
    PFNGLMATERIALFVPROC glad_glMaterialfv;
    PFNGLMATERIALIPROC glad_glMateriali;
    PFNGLMATERIALIVPROC glad_glMaterialiv;
    PFNGLMATRIXMODEPROC glad_glMatrixMode;
    PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier;
    PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading;
    PFNGLMULTMATRIXDPROC glad_glMultMatrixd;
    PFNGLMULTMATRIXFPROC glad_glMultMatrixf;
    PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd;
    PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf;
    PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays;
    PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect;
    PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements;
    PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex;
    PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect;
    PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d;
    PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv;
    PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f;
    PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv;
    PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i;
    PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv;
    PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s;
    PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv;
    PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d;
    PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv;
    PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f;
    PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv;
    PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i;
    PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv;
    PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s;
    PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv;
    PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d;
    PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv;
    PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f;
    PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv;
    PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i;
    PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv;
    PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s;
    PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv;
    PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d;
    PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv;
    PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f;
    PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv;
    PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i;
    PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv;
    PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s;
    PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv;
    PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui;
    PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv;
    PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui;
    PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv;
    PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui;
    PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv;
    PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui;
    PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv;
    PFNGLNEWLISTPROC glad_glNewList;
    PFNGLNORMAL3BPROC glad_glNormal3b;
    PFNGLNORMAL3BVPROC glad_glNormal3bv;
    PFNGLNORMAL3DPROC glad_glNormal3d;
    PFNGLNORMAL3DVPROC glad_glNormal3dv;
    PFNGLNORMAL3FPROC glad_glNormal3f;
    PFNGLNORMAL3FVPROC glad_glNormal3fv;
    PFNGLNORMAL3IPROC glad_glNormal3i;
    PFNGLNORMAL3IVPROC glad_glNormal3iv;
    PFNGLNORMAL3SPROC glad_glNormal3s;
    PFNGLNORMAL3SVPROC glad_glNormal3sv;
    PFNGLNORMALP3UIPROC glad_glNormalP3ui;
    PFNGLNORMALP3UIVPROC glad_glNormalP3uiv;
    PFNGLNORMALPOINTERPROC glad_glNormalPointer;
    PFNGLOBJECTLABELPROC glad_glObjectLabel;
    PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel;
    PFNGLORTHOPROC glad_glOrtho;
    PFNGLPASSTHROUGHPROC glad_glPassThrough;
    PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv;
    PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri;
    PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback;
    PFNGLPIXELMAPFVPROC glad_glPixelMapfv;
    PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv;
    PFNGLPIXELMAPUSVPROC glad_glPixelMapusv;
    PFNGLPIXELSTOREFPROC glad_glPixelStoref;
    PFNGLPIXELSTOREIPROC glad_glPixelStorei;
    PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf;
    PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi;
    PFNGLPIXELZOOMPROC glad_glPixelZoom;
    PFNGLPOINTPARAMETERFPROC glad_glPointParameterf;
    PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv;
    PFNGLPOINTPARAMETERIPROC glad_glPointParameteri;
    PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv;
    PFNGLPOINTSIZEPROC glad_glPointSize;
    PFNGLPOLYGONMODEPROC glad_glPolygonMode;
    PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset;
    PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple;
    PFNGLPOPATTRIBPROC glad_glPopAttrib;
    PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib;
    PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup;
    PFNGLPOPMATRIXPROC glad_glPopMatrix;
    PFNGLPOPNAMEPROC glad_glPopName;
    PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex;
    PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures;
    PFNGLPROGRAMBINARYPROC glad_glProgramBinary;
    PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri;
    PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d;
    PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv;
    PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f;
    PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv;
    PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i;
    PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv;
    PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui;
    PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv;
    PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d;
    PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv;
    PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f;
    PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv;
    PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i;
    PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv;
    PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui;
    PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv;
    PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d;
    PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv;
    PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f;
    PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv;
    PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i;
    PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv;
    PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui;
    PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv;
    PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d;
    PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv;
    PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f;
    PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv;
    PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i;
    PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv;
    PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui;
    PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv;
    PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv;
    PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv;
    PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv;
    PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv;
    PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv;
    PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv;
    PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv;
    PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv;
    PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv;
    PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv;
    PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv;
    PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv;
    PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv;
    PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv;
    PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv;
    PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv;
    PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv;
    PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv;
    PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex;
    PFNGLPUSHATTRIBPROC glad_glPushAttrib;
    PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib;
    PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup;
    PFNGLPUSHMATRIXPROC glad_glPushMatrix;
    PFNGLPUSHNAMEPROC glad_glPushName;
    PFNGLQUERYCOUNTERPROC glad_glQueryCounter;
    PFNGLRASTERPOS2DPROC glad_glRasterPos2d;
    PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv;
    PFNGLRASTERPOS2FPROC glad_glRasterPos2f;
    PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv;
    PFNGLRASTERPOS2IPROC glad_glRasterPos2i;
    PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv;
    PFNGLRASTERPOS2SPROC glad_glRasterPos2s;
    PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv;
    PFNGLRASTERPOS3DPROC glad_glRasterPos3d;
    PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv;
    PFNGLRASTERPOS3FPROC glad_glRasterPos3f;
    PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv;
    PFNGLRASTERPOS3IPROC glad_glRasterPos3i;
    PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv;
    PFNGLRASTERPOS3SPROC glad_glRasterPos3s;
    PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv;
    PFNGLRASTERPOS4DPROC glad_glRasterPos4d;
    PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv;
    PFNGLRASTERPOS4FPROC glad_glRasterPos4f;
    PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv;
    PFNGLRASTERPOS4IPROC glad_glRasterPos4i;
    PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv;
    PFNGLRASTERPOS4SPROC glad_glRasterPos4s;
    PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv;
    PFNGLREADBUFFERPROC glad_glReadBuffer;
    PFNGLREADPIXELSPROC glad_glReadPixels;
    PFNGLRECTDPROC glad_glRectd;
    PFNGLRECTDVPROC glad_glRectdv;
    PFNGLRECTFPROC glad_glRectf;
    PFNGLRECTFVPROC glad_glRectfv;
    PFNGLRECTIPROC glad_glRecti;
    PFNGLRECTIVPROC glad_glRectiv;
    PFNGLRECTSPROC glad_glRects;
    PFNGLRECTSVPROC glad_glRectsv;
    PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler;
    PFNGLRENDERMODEPROC glad_glRenderMode;
    PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample;
    PFNGLRESUMETRANSFORMFEEDBACKPROC glad_glResumeTransformFeedback;
    PFNGLROTATEDPROC glad_glRotated;
    PFNGLROTATEFPROC glad_glRotatef;
    PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage;
    PFNGLSAMPLEMASKIPROC glad_glSampleMaski;
    PFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv;
    PFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv;
    PFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf;
    PFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv;
    PFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri;
    PFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv;
    PFNGLSCALEDPROC glad_glScaled;
    PFNGLSCALEFPROC glad_glScalef;
    PFNGLSCISSORPROC glad_glScissor;
    PFNGLSCISSORARRAYVPROC glad_glScissorArrayv;
    PFNGLSCISSORINDEXEDPROC glad_glScissorIndexed;
    PFNGLSCISSORINDEXEDVPROC glad_glScissorIndexedv;
    PFNGLSECONDARYCOLOR3BPROC glad_glSecondaryColor3b;
    PFNGLSECONDARYCOLOR3BVPROC glad_glSecondaryColor3bv;
    PFNGLSECONDARYCOLOR3DPROC glad_glSecondaryColor3d;
    PFNGLSECONDARYCOLOR3DVPROC glad_glSecondaryColor3dv;
    PFNGLSECONDARYCOLOR3FPROC glad_glSecondaryColor3f;
    PFNGLSECONDARYCOLOR3FVPROC glad_glSecondaryColor3fv;
    PFNGLSECONDARYCOLOR3IPROC glad_glSecondaryColor3i;
    PFNGLSECONDARYCOLOR3IVPROC glad_glSecondaryColor3iv;
    PFNGLSECONDARYCOLOR3SPROC glad_glSecondaryColor3s;
    PFNGLSECONDARYCOLOR3SVPROC glad_glSecondaryColor3sv;
    PFNGLSECONDARYCOLOR3UBPROC glad_glSecondaryColor3ub;
    PFNGLSECONDARYCOLOR3UBVPROC glad_glSecondaryColor3ubv;
    PFNGLSECONDARYCOLOR3UIPROC glad_glSecondaryColor3ui;
    PFNGLSECONDARYCOLOR3UIVPROC glad_glSecondaryColor3uiv;
    PFNGLSECONDARYCOLOR3USPROC glad_glSecondaryColor3us;
    PFNGLSECONDARYCOLOR3USVPROC glad_glSecondaryColor3usv;
    PFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui;
    PFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv;
    PFNGLSECONDARYCOLORPOINTERPROC glad_glSecondaryColorPointer;
    PFNGLSELECTBUFFERPROC glad_glSelectBuffer;
    PFNGLSHADEMODELPROC glad_glShadeModel;
    PFNGLSHADERBINARYPROC glad_glShaderBinary;
    PFNGLSHADERSOURCEPROC glad_glShaderSource;
    PFNGLSHADERSTORAGEBLOCKBINDINGPROC glad_glShaderStorageBlockBinding;
    PFNGLSTENCILFUNCPROC glad_glStencilFunc;
    PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate;
    PFNGLSTENCILMASKPROC glad_glStencilMask;
    PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate;
    PFNGLSTENCILOPPROC glad_glStencilOp;
    PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate;
    PFNGLTEXBUFFERPROC glad_glTexBuffer;
    PFNGLTEXBUFFERRANGEPROC glad_glTexBufferRange;
    PFNGLTEXCOORD1DPROC glad_glTexCoord1d;
    PFNGLTEXCOORD1DVPROC glad_glTexCoord1dv;
    PFNGLTEXCOORD1FPROC glad_glTexCoord1f;
    PFNGLTEXCOORD1FVPROC glad_glTexCoord1fv;
    PFNGLTEXCOORD1IPROC glad_glTexCoord1i;
    PFNGLTEXCOORD1IVPROC glad_glTexCoord1iv;
    PFNGLTEXCOORD1SPROC glad_glTexCoord1s;
    PFNGLTEXCOORD1SVPROC glad_glTexCoord1sv;
    PFNGLTEXCOORD2DPROC glad_glTexCoord2d;
    PFNGLTEXCOORD2DVPROC glad_glTexCoord2dv;
    PFNGLTEXCOORD2FPROC glad_glTexCoord2f;
    PFNGLTEXCOORD2FVPROC glad_glTexCoord2fv;
    PFNGLTEXCOORD2IPROC glad_glTexCoord2i;
    PFNGLTEXCOORD2IVPROC glad_glTexCoord2iv;
    PFNGLTEXCOORD2SPROC glad_glTexCoord2s;
    PFNGLTEXCOORD2SVPROC glad_glTexCoord2sv;
    PFNGLTEXCOORD3DPROC glad_glTexCoord3d;
    PFNGLTEXCOORD3DVPROC glad_glTexCoord3dv;
    PFNGLTEXCOORD3FPROC glad_glTexCoord3f;
    PFNGLTEXCOORD3FVPROC glad_glTexCoord3fv;
    PFNGLTEXCOORD3IPROC glad_glTexCoord3i;
    PFNGLTEXCOORD3IVPROC glad_glTexCoord3iv;
    PFNGLTEXCOORD3SPROC glad_glTexCoord3s;
    PFNGLTEXCOORD3SVPROC glad_glTexCoord3sv;
    PFNGLTEXCOORD4DPROC glad_glTexCoord4d;
    PFNGLTEXCOORD4DVPROC glad_glTexCoord4dv;
    PFNGLTEXCOORD4FPROC glad_glTexCoord4f;
    PFNGLTEXCOORD4FVPROC glad_glTexCoord4fv;
    PFNGLTEXCOORD4IPROC glad_glTexCoord4i;
    PFNGLTEXCOORD4IVPROC glad_glTexCoord4iv;
    PFNGLTEXCOORD4SPROC glad_glTexCoord4s;
    PFNGLTEXCOORD4SVPROC glad_glTexCoord4sv;
    PFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui;
    PFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv;
    PFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui;
    PFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv;
    PFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui;
    PFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv;
    PFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui;
    PFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv;
    PFNGLTEXCOORDPOINTERPROC glad_glTexCoordPointer;
    PFNGLTEXENVFPROC glad_glTexEnvf;
    PFNGLTEXENVFVPROC glad_glTexEnvfv;
    PFNGLTEXENVIPROC glad_glTexEnvi;
    PFNGLTEXENVIVPROC glad_glTexEnviv;
    PFNGLTEXGENDPROC glad_glTexGend;
    PFNGLTEXGENDVPROC glad_glTexGendv;
    PFNGLTEXGENFPROC glad_glTexGenf;
    PFNGLTEXGENFVPROC glad_glTexGenfv;
    PFNGLTEXGENIPROC glad_glTexGeni;
    PFNGLTEXGENIVPROC glad_glTexGeniv;
    PFNGLTEXIMAGE1DPROC glad_glTexImage1D;
    PFNGLTEXIMAGE2DPROC glad_glTexImage2D;
    PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample;
    PFNGLTEXIMAGE3DPROC glad_glTexImage3D;
    PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample;
    PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv;
    PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv;
    PFNGLTEXPARAMETERFPROC glad_glTexParameterf;
    PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv;
    PFNGLTEXPARAMETERIPROC glad_glTexParameteri;
    PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv;
    PFNGLTEXSTORAGE1DPROC glad_glTexStorage1D;
    PFNGLTEXSTORAGE2DPROC glad_glTexStorage2D;
    PFNGLTEXSTORAGE2DMULTISAMPLEPROC glad_glTexStorage2DMultisample;
    PFNGLTEXSTORAGE3DPROC glad_glTexStorage3D;
    PFNGLTEXSTORAGE3DMULTISAMPLEPROC glad_glTexStorage3DMultisample;
    PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D;
    PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D;
    PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D;
    PFNGLTEXTUREVIEWPROC glad_glTextureView;
    PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings;
    PFNGLTRANSLATEDPROC glad_glTranslated;
    PFNGLTRANSLATEFPROC glad_glTranslatef;
    PFNGLUNIFORM1DPROC glad_glUniform1d;
    PFNGLUNIFORM1DVPROC glad_glUniform1dv;
    PFNGLUNIFORM1FPROC glad_glUniform1f;
    PFNGLUNIFORM1FVPROC glad_glUniform1fv;
    PFNGLUNIFORM1IPROC glad_glUniform1i;
    PFNGLUNIFORM1IVPROC glad_glUniform1iv;
    PFNGLUNIFORM1UIPROC glad_glUniform1ui;
    PFNGLUNIFORM1UIVPROC glad_glUniform1uiv;
    PFNGLUNIFORM2DPROC glad_glUniform2d;
    PFNGLUNIFORM2DVPROC glad_glUniform2dv;
    PFNGLUNIFORM2FPROC glad_glUniform2f;
    PFNGLUNIFORM2FVPROC glad_glUniform2fv;
    PFNGLUNIFORM2IPROC glad_glUniform2i;
    PFNGLUNIFORM2IVPROC glad_glUniform2iv;
    PFNGLUNIFORM2UIPROC glad_glUniform2ui;
    PFNGLUNIFORM2UIVPROC glad_glUniform2uiv;
    PFNGLUNIFORM3DPROC glad_glUniform3d;
    PFNGLUNIFORM3DVPROC glad_glUniform3dv;
    PFNGLUNIFORM3FPROC glad_glUniform3f;
    PFNGLUNIFORM3FVPROC glad_glUniform3fv;
    PFNGLUNIFORM3IPROC glad_glUniform3i;
    PFNGLUNIFORM3IVPROC glad_glUniform3iv;
    PFNGLUNIFORM3UIPROC glad_glUniform3ui;
    PFNGLUNIFORM3UIVPROC glad_glUniform3uiv;
    PFNGLUNIFORM4DPROC glad_glUniform4d;
    PFNGLUNIFORM4DVPROC glad_glUniform4dv;
    PFNGLUNIFORM4FPROC glad_glUniform4f;
    PFNGLUNIFORM4FVPROC glad_glUniform4fv;
    PFNGLUNIFORM4IPROC glad_glUniform4i;
    PFNGLUNIFORM4IVPROC glad_glUniform4iv;
    PFNGLUNIFORM4UIPROC glad_glUniform4ui;
    PFNGLUNIFORM4UIVPROC glad_glUniform4uiv;
    PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding;
    PFNGLUNIFORMMATRIX2DVPROC glad_glUniformMatrix2dv;
    PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv;
    PFNGLUNIFORMMATRIX2X3DVPROC glad_glUniformMatrix2x3dv;
    PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv;
    PFNGLUNIFORMMATRIX2X4DVPROC glad_glUniformMatrix2x4dv;
    PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv;
    PFNGLUNIFORMMATRIX3DVPROC glad_glUniformMatrix3dv;
    PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv;
    PFNGLUNIFORMMATRIX3X2DVPROC glad_glUniformMatrix3x2dv;
    PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv;
    PFNGLUNIFORMMATRIX3X4DVPROC glad_glUniformMatrix3x4dv;
    PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv;
    PFNGLUNIFORMMATRIX4DVPROC glad_glUniformMatrix4dv;
    PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv;
    PFNGLUNIFORMMATRIX4X2DVPROC glad_glUniformMatrix4x2dv;
    PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv;
    PFNGLUNIFORMMATRIX4X3DVPROC glad_glUniformMatrix4x3dv;
    PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv;
    PFNGLUNIFORMSUBROUTINESUIVPROC glad_glUniformSubroutinesuiv;
    PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer;
    PFNGLUSEPROGRAMPROC glad_glUseProgram;
    PFNGLUSEPROGRAMSTAGESPROC glad_glUseProgramStages;
    PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram;
    PFNGLVALIDATEPROGRAMPIPELINEPROC glad_glValidateProgramPipeline;
    PFNGLVERTEX2DPROC glad_glVertex2d;
    PFNGLVERTEX2DVPROC glad_glVertex2dv;
    PFNGLVERTEX2FPROC glad_glVertex2f;
    PFNGLVERTEX2FVPROC glad_glVertex2fv;
    PFNGLVERTEX2IPROC glad_glVertex2i;
    PFNGLVERTEX2IVPROC glad_glVertex2iv;
    PFNGLVERTEX2SPROC glad_glVertex2s;
    PFNGLVERTEX2SVPROC glad_glVertex2sv;
    PFNGLVERTEX3DPROC glad_glVertex3d;
    PFNGLVERTEX3DVPROC glad_glVertex3dv;
    PFNGLVERTEX3FPROC glad_glVertex3f;
    PFNGLVERTEX3FVPROC glad_glVertex3fv;
    PFNGLVERTEX3IPROC glad_glVertex3i;
    PFNGLVERTEX3IVPROC glad_glVertex3iv;
    PFNGLVERTEX3SPROC glad_glVertex3s;
    PFNGLVERTEX3SVPROC glad_glVertex3sv;
    PFNGLVERTEX4DPROC glad_glVertex4d;
    PFNGLVERTEX4DVPROC glad_glVertex4dv;
    PFNGLVERTEX4FPROC glad_glVertex4f;
    PFNGLVERTEX4FVPROC glad_glVertex4fv;
    PFNGLVERTEX4IPROC glad_glVertex4i;
    PFNGLVERTEX4IVPROC glad_glVertex4iv;
    PFNGLVERTEX4SPROC glad_glVertex4s;
    PFNGLVERTEX4SVPROC glad_glVertex4sv;
    PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d;
    PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv;
    PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f;
    PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv;
    PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s;
    PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv;
    PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d;
    PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv;
    PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f;
    PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv;
    PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s;
    PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv;
    PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d;
    PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv;
    PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f;
    PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv;
    PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s;
    PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv;
    PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv;
    PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv;
    PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv;
    PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub;
    PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv;
    PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv;
    PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv;
    PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv;
    PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d;
    PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv;
    PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f;
    PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv;
    PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv;
    PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s;
    PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv;
    PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv;
    PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv;
    PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv;
    PFNGLVERTEXATTRIBBINDINGPROC glad_glVertexAttribBinding;
    PFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor;
    PFNGLVERTEXATTRIBFORMATPROC glad_glVertexAttribFormat;
    PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i;
    PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv;
    PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui;
    PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv;
    PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i;
    PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv;
    PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui;
    PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv;
    PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i;
    PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv;
    PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui;
    PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv;
    PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv;
    PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i;
    PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv;
    PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv;
    PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv;
    PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui;
    PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv;
    PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv;
    PFNGLVERTEXATTRIBIFORMATPROC glad_glVertexAttribIFormat;
    PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer;
    PFNGLVERTEXATTRIBL1DPROC glad_glVertexAttribL1d;
    PFNGLVERTEXATTRIBL1DVPROC glad_glVertexAttribL1dv;
    PFNGLVERTEXATTRIBL2DPROC glad_glVertexAttribL2d;
    PFNGLVERTEXATTRIBL2DVPROC glad_glVertexAttribL2dv;
    PFNGLVERTEXATTRIBL3DPROC glad_glVertexAttribL3d;
    PFNGLVERTEXATTRIBL3DVPROC glad_glVertexAttribL3dv;
    PFNGLVERTEXATTRIBL4DPROC glad_glVertexAttribL4d;
    PFNGLVERTEXATTRIBL4DVPROC glad_glVertexAttribL4dv;
    PFNGLVERTEXATTRIBLFORMATPROC glad_glVertexAttribLFormat;
    PFNGLVERTEXATTRIBLPOINTERPROC glad_glVertexAttribLPointer;
    PFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui;
    PFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv;
    PFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui;
    PFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv;
    PFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui;
    PFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv;
    PFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui;
    PFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv;
    PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer;
    PFNGLVERTEXBINDINGDIVISORPROC glad_glVertexBindingDivisor;
    PFNGLVERTEXP2UIPROC glad_glVertexP2ui;
    PFNGLVERTEXP2UIVPROC glad_glVertexP2uiv;
    PFNGLVERTEXP3UIPROC glad_glVertexP3ui;
    PFNGLVERTEXP3UIVPROC glad_glVertexP3uiv;
    PFNGLVERTEXP4UIPROC glad_glVertexP4ui;
    PFNGLVERTEXP4UIVPROC glad_glVertexP4uiv;
    PFNGLVERTEXPOINTERPROC glad_glVertexPointer;
    PFNGLVIEWPORTPROC glad_glViewport;
    PFNGLVIEWPORTARRAYVPROC glad_glViewportArrayv;
    PFNGLVIEWPORTINDEXEDFPROC glad_glViewportIndexedf;
    PFNGLVIEWPORTINDEXEDFVPROC glad_glViewportIndexedfv;
    PFNGLWAITSYNCPROC glad_glWaitSync;
    PFNGLWINDOWPOS2DPROC glad_glWindowPos2d;
    PFNGLWINDOWPOS2DVPROC glad_glWindowPos2dv;
    PFNGLWINDOWPOS2FPROC glad_glWindowPos2f;
    PFNGLWINDOWPOS2FVPROC glad_glWindowPos2fv;
    PFNGLWINDOWPOS2IPROC glad_glWindowPos2i;
    PFNGLWINDOWPOS2IVPROC glad_glWindowPos2iv;
    PFNGLWINDOWPOS2SPROC glad_glWindowPos2s;
    PFNGLWINDOWPOS2SVPROC glad_glWindowPos2sv;
    PFNGLWINDOWPOS3DPROC glad_glWindowPos3d;
    PFNGLWINDOWPOS3DVPROC glad_glWindowPos3dv;
    PFNGLWINDOWPOS3FPROC glad_glWindowPos3f;
    PFNGLWINDOWPOS3FVPROC glad_glWindowPos3fv;
    PFNGLWINDOWPOS3IPROC glad_glWindowPos3i;
    PFNGLWINDOWPOS3IVPROC glad_glWindowPos3iv;
    PFNGLWINDOWPOS3SPROC glad_glWindowPos3s;
    PFNGLWINDOWPOS3SVPROC glad_glWindowPos3sv;
};

extern GLADPTRS gladptrs;


GLAD_API_CALL int gladLoadGLUserPtr( GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGL( GLADloadfunc load);


#ifdef GLAD_GL

GLAD_API_CALL int gladLoaderLoadGL(void);
GLAD_API_CALL void gladLoaderUnloadGL(void);

#endif

#ifdef __cplusplus
}
#endif
#endif
